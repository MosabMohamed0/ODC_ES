
Motor control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001100  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00001100  00001194  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000017  0080007a  0080007a  000011ae  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011ae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  0000121c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e46  00000000  00000000  0000149c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bf1  00000000  00000000  000032e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000122a  00000000  00000000  00003ed3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000688  00000000  00000000  00005100  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b50  00000000  00000000  00005788  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001300  00000000  00000000  000062d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  000075d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__vector_4>
      14:	0c 94 b6 05 	jmp	0xb6c	; 0xb6c <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 48 05 	jmp	0xa90	; 0xa90 <__vector_9>
      28:	0c 94 0f 05 	jmp	0xa1e	; 0xa1e <__vector_10>
      2c:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e0       	ldi	r30, 0x00	; 0
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	aa 37       	cpi	r26, 0x7A	; 122
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	aa e7       	ldi	r26, 0x7A	; 122
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 39       	cpi	r26, 0x91	; 145
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 05 04 	call	0x80a	; 0x80a <main>
      8a:	0c 94 7e 08 	jmp	0x10fc	; 0x10fc <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_voidSetPinDirection>:
      92:	84 30       	cpi	r24, 0x04	; 4
      94:	08 f0       	brcs	.+2      	; 0x98 <DIO_voidSetPinDirection+0x6>
      96:	7e c0       	rjmp	.+252    	; 0x194 <DIO_voidSetPinDirection+0x102>
      98:	68 30       	cpi	r22, 0x08	; 8
      9a:	08 f0       	brcs	.+2      	; 0x9e <DIO_voidSetPinDirection+0xc>
      9c:	7b c0       	rjmp	.+246    	; 0x194 <DIO_voidSetPinDirection+0x102>
      9e:	42 30       	cpi	r20, 0x02	; 2
      a0:	08 f0       	brcs	.+2      	; 0xa4 <DIO_voidSetPinDirection+0x12>
      a2:	78 c0       	rjmp	.+240    	; 0x194 <DIO_voidSetPinDirection+0x102>
      a4:	81 30       	cpi	r24, 0x01	; 1
      a6:	19 f1       	breq	.+70     	; 0xee <DIO_voidSetPinDirection+0x5c>
      a8:	30 f0       	brcs	.+12     	; 0xb6 <DIO_voidSetPinDirection+0x24>
      aa:	82 30       	cpi	r24, 0x02	; 2
      ac:	e1 f1       	breq	.+120    	; 0x126 <DIO_voidSetPinDirection+0x94>
      ae:	83 30       	cpi	r24, 0x03	; 3
      b0:	09 f4       	brne	.+2      	; 0xb4 <DIO_voidSetPinDirection+0x22>
      b2:	55 c0       	rjmp	.+170    	; 0x15e <DIO_voidSetPinDirection+0xcc>
      b4:	08 95       	ret
      b6:	44 23       	and	r20, r20
      b8:	19 f0       	breq	.+6      	; 0xc0 <DIO_voidSetPinDirection+0x2e>
      ba:	41 30       	cpi	r20, 0x01	; 1
      bc:	69 f0       	breq	.+26     	; 0xd8 <DIO_voidSetPinDirection+0x46>
      be:	08 95       	ret
      c0:	2a b3       	in	r18, 0x1a	; 26
      c2:	81 e0       	ldi	r24, 0x01	; 1
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_voidSetPinDirection+0x3a>
      c8:	88 0f       	add	r24, r24
      ca:	99 1f       	adc	r25, r25
      cc:	6a 95       	dec	r22
      ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_voidSetPinDirection+0x36>
      d0:	80 95       	com	r24
      d2:	82 23       	and	r24, r18
      d4:	8a bb       	out	0x1a, r24	; 26
      d6:	08 95       	ret
      d8:	2a b3       	in	r18, 0x1a	; 26
      da:	81 e0       	ldi	r24, 0x01	; 1
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	02 c0       	rjmp	.+4      	; 0xe4 <DIO_voidSetPinDirection+0x52>
      e0:	88 0f       	add	r24, r24
      e2:	99 1f       	adc	r25, r25
      e4:	6a 95       	dec	r22
      e6:	e2 f7       	brpl	.-8      	; 0xe0 <DIO_voidSetPinDirection+0x4e>
      e8:	82 2b       	or	r24, r18
      ea:	8a bb       	out	0x1a, r24	; 26
      ec:	08 95       	ret
      ee:	44 23       	and	r20, r20
      f0:	19 f0       	breq	.+6      	; 0xf8 <DIO_voidSetPinDirection+0x66>
      f2:	41 30       	cpi	r20, 0x01	; 1
      f4:	69 f0       	breq	.+26     	; 0x110 <DIO_voidSetPinDirection+0x7e>
      f6:	08 95       	ret
      f8:	27 b3       	in	r18, 0x17	; 23
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_voidSetPinDirection+0x72>
     100:	88 0f       	add	r24, r24
     102:	99 1f       	adc	r25, r25
     104:	6a 95       	dec	r22
     106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_voidSetPinDirection+0x6e>
     108:	80 95       	com	r24
     10a:	82 23       	and	r24, r18
     10c:	87 bb       	out	0x17, r24	; 23
     10e:	08 95       	ret
     110:	27 b3       	in	r18, 0x17	; 23
     112:	81 e0       	ldi	r24, 0x01	; 1
     114:	90 e0       	ldi	r25, 0x00	; 0
     116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_voidSetPinDirection+0x8a>
     118:	88 0f       	add	r24, r24
     11a:	99 1f       	adc	r25, r25
     11c:	6a 95       	dec	r22
     11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_voidSetPinDirection+0x86>
     120:	82 2b       	or	r24, r18
     122:	87 bb       	out	0x17, r24	; 23
     124:	08 95       	ret
     126:	44 23       	and	r20, r20
     128:	19 f0       	breq	.+6      	; 0x130 <DIO_voidSetPinDirection+0x9e>
     12a:	41 30       	cpi	r20, 0x01	; 1
     12c:	69 f0       	breq	.+26     	; 0x148 <DIO_voidSetPinDirection+0xb6>
     12e:	08 95       	ret
     130:	24 b3       	in	r18, 0x14	; 20
     132:	81 e0       	ldi	r24, 0x01	; 1
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_voidSetPinDirection+0xaa>
     138:	88 0f       	add	r24, r24
     13a:	99 1f       	adc	r25, r25
     13c:	6a 95       	dec	r22
     13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_voidSetPinDirection+0xa6>
     140:	80 95       	com	r24
     142:	82 23       	and	r24, r18
     144:	84 bb       	out	0x14, r24	; 20
     146:	08 95       	ret
     148:	24 b3       	in	r18, 0x14	; 20
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_voidSetPinDirection+0xc2>
     150:	88 0f       	add	r24, r24
     152:	99 1f       	adc	r25, r25
     154:	6a 95       	dec	r22
     156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_voidSetPinDirection+0xbe>
     158:	82 2b       	or	r24, r18
     15a:	84 bb       	out	0x14, r24	; 20
     15c:	08 95       	ret
     15e:	44 23       	and	r20, r20
     160:	19 f0       	breq	.+6      	; 0x168 <DIO_voidSetPinDirection+0xd6>
     162:	41 30       	cpi	r20, 0x01	; 1
     164:	69 f0       	breq	.+26     	; 0x180 <DIO_voidSetPinDirection+0xee>
     166:	08 95       	ret
     168:	21 b3       	in	r18, 0x11	; 17
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_voidSetPinDirection+0xe2>
     170:	88 0f       	add	r24, r24
     172:	99 1f       	adc	r25, r25
     174:	6a 95       	dec	r22
     176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_voidSetPinDirection+0xde>
     178:	80 95       	com	r24
     17a:	82 23       	and	r24, r18
     17c:	81 bb       	out	0x11, r24	; 17
     17e:	08 95       	ret
     180:	21 b3       	in	r18, 0x11	; 17
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_voidSetPinDirection+0xfa>
     188:	88 0f       	add	r24, r24
     18a:	99 1f       	adc	r25, r25
     18c:	6a 95       	dec	r22
     18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_voidSetPinDirection+0xf6>
     190:	82 2b       	or	r24, r18
     192:	81 bb       	out	0x11, r24	; 17
     194:	08 95       	ret

00000196 <DIO_voidSetPinValue>:
     196:	84 30       	cpi	r24, 0x04	; 4
     198:	08 f0       	brcs	.+2      	; 0x19c <DIO_voidSetPinValue+0x6>
     19a:	7e c0       	rjmp	.+252    	; 0x298 <DIO_voidSetPinValue+0x102>
     19c:	68 30       	cpi	r22, 0x08	; 8
     19e:	08 f0       	brcs	.+2      	; 0x1a2 <DIO_voidSetPinValue+0xc>
     1a0:	7b c0       	rjmp	.+246    	; 0x298 <DIO_voidSetPinValue+0x102>
     1a2:	42 30       	cpi	r20, 0x02	; 2
     1a4:	08 f0       	brcs	.+2      	; 0x1a8 <DIO_voidSetPinValue+0x12>
     1a6:	78 c0       	rjmp	.+240    	; 0x298 <DIO_voidSetPinValue+0x102>
     1a8:	81 30       	cpi	r24, 0x01	; 1
     1aa:	19 f1       	breq	.+70     	; 0x1f2 <DIO_voidSetPinValue+0x5c>
     1ac:	30 f0       	brcs	.+12     	; 0x1ba <DIO_voidSetPinValue+0x24>
     1ae:	82 30       	cpi	r24, 0x02	; 2
     1b0:	e1 f1       	breq	.+120    	; 0x22a <DIO_voidSetPinValue+0x94>
     1b2:	83 30       	cpi	r24, 0x03	; 3
     1b4:	09 f4       	brne	.+2      	; 0x1b8 <DIO_voidSetPinValue+0x22>
     1b6:	55 c0       	rjmp	.+170    	; 0x262 <DIO_voidSetPinValue+0xcc>
     1b8:	08 95       	ret
     1ba:	44 23       	and	r20, r20
     1bc:	19 f0       	breq	.+6      	; 0x1c4 <DIO_voidSetPinValue+0x2e>
     1be:	41 30       	cpi	r20, 0x01	; 1
     1c0:	69 f0       	breq	.+26     	; 0x1dc <DIO_voidSetPinValue+0x46>
     1c2:	08 95       	ret
     1c4:	2b b3       	in	r18, 0x1b	; 27
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_voidSetPinValue+0x3a>
     1cc:	88 0f       	add	r24, r24
     1ce:	99 1f       	adc	r25, r25
     1d0:	6a 95       	dec	r22
     1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_voidSetPinValue+0x36>
     1d4:	80 95       	com	r24
     1d6:	82 23       	and	r24, r18
     1d8:	8b bb       	out	0x1b, r24	; 27
     1da:	08 95       	ret
     1dc:	2b b3       	in	r18, 0x1b	; 27
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <DIO_voidSetPinValue+0x52>
     1e4:	88 0f       	add	r24, r24
     1e6:	99 1f       	adc	r25, r25
     1e8:	6a 95       	dec	r22
     1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <DIO_voidSetPinValue+0x4e>
     1ec:	82 2b       	or	r24, r18
     1ee:	8b bb       	out	0x1b, r24	; 27
     1f0:	08 95       	ret
     1f2:	44 23       	and	r20, r20
     1f4:	19 f0       	breq	.+6      	; 0x1fc <DIO_voidSetPinValue+0x66>
     1f6:	41 30       	cpi	r20, 0x01	; 1
     1f8:	69 f0       	breq	.+26     	; 0x214 <DIO_voidSetPinValue+0x7e>
     1fa:	08 95       	ret
     1fc:	28 b3       	in	r18, 0x18	; 24
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_voidSetPinValue+0x72>
     204:	88 0f       	add	r24, r24
     206:	99 1f       	adc	r25, r25
     208:	6a 95       	dec	r22
     20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_voidSetPinValue+0x6e>
     20c:	80 95       	com	r24
     20e:	82 23       	and	r24, r18
     210:	88 bb       	out	0x18, r24	; 24
     212:	08 95       	ret
     214:	28 b3       	in	r18, 0x18	; 24
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_voidSetPinValue+0x8a>
     21c:	88 0f       	add	r24, r24
     21e:	99 1f       	adc	r25, r25
     220:	6a 95       	dec	r22
     222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_voidSetPinValue+0x86>
     224:	82 2b       	or	r24, r18
     226:	88 bb       	out	0x18, r24	; 24
     228:	08 95       	ret
     22a:	44 23       	and	r20, r20
     22c:	19 f0       	breq	.+6      	; 0x234 <DIO_voidSetPinValue+0x9e>
     22e:	41 30       	cpi	r20, 0x01	; 1
     230:	69 f0       	breq	.+26     	; 0x24c <DIO_voidSetPinValue+0xb6>
     232:	08 95       	ret
     234:	25 b3       	in	r18, 0x15	; 21
     236:	81 e0       	ldi	r24, 0x01	; 1
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_voidSetPinValue+0xaa>
     23c:	88 0f       	add	r24, r24
     23e:	99 1f       	adc	r25, r25
     240:	6a 95       	dec	r22
     242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_voidSetPinValue+0xa6>
     244:	80 95       	com	r24
     246:	82 23       	and	r24, r18
     248:	85 bb       	out	0x15, r24	; 21
     24a:	08 95       	ret
     24c:	25 b3       	in	r18, 0x15	; 21
     24e:	81 e0       	ldi	r24, 0x01	; 1
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_voidSetPinValue+0xc2>
     254:	88 0f       	add	r24, r24
     256:	99 1f       	adc	r25, r25
     258:	6a 95       	dec	r22
     25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_voidSetPinValue+0xbe>
     25c:	82 2b       	or	r24, r18
     25e:	85 bb       	out	0x15, r24	; 21
     260:	08 95       	ret
     262:	44 23       	and	r20, r20
     264:	19 f0       	breq	.+6      	; 0x26c <DIO_voidSetPinValue+0xd6>
     266:	41 30       	cpi	r20, 0x01	; 1
     268:	69 f0       	breq	.+26     	; 0x284 <DIO_voidSetPinValue+0xee>
     26a:	08 95       	ret
     26c:	22 b3       	in	r18, 0x12	; 18
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_voidSetPinValue+0xe2>
     274:	88 0f       	add	r24, r24
     276:	99 1f       	adc	r25, r25
     278:	6a 95       	dec	r22
     27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_voidSetPinValue+0xde>
     27c:	80 95       	com	r24
     27e:	82 23       	and	r24, r18
     280:	82 bb       	out	0x12, r24	; 18
     282:	08 95       	ret
     284:	22 b3       	in	r18, 0x12	; 18
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_voidSetPinValue+0xfa>
     28c:	88 0f       	add	r24, r24
     28e:	99 1f       	adc	r25, r25
     290:	6a 95       	dec	r22
     292:	e2 f7       	brpl	.-8      	; 0x28c <DIO_voidSetPinValue+0xf6>
     294:	82 2b       	or	r24, r18
     296:	82 bb       	out	0x12, r24	; 18
     298:	08 95       	ret

0000029a <DIO_voidGetPinValue>:
     29a:	84 30       	cpi	r24, 0x04	; 4
     29c:	c0 f5       	brcc	.+112    	; 0x30e <DIO_voidGetPinValue+0x74>
     29e:	68 30       	cpi	r22, 0x08	; 8
     2a0:	b0 f5       	brcc	.+108    	; 0x30e <DIO_voidGetPinValue+0x74>
     2a2:	41 15       	cp	r20, r1
     2a4:	51 05       	cpc	r21, r1
     2a6:	99 f1       	breq	.+102    	; 0x30e <DIO_voidGetPinValue+0x74>
     2a8:	81 30       	cpi	r24, 0x01	; 1
     2aa:	89 f0       	breq	.+34     	; 0x2ce <DIO_voidGetPinValue+0x34>
     2ac:	28 f0       	brcs	.+10     	; 0x2b8 <DIO_voidGetPinValue+0x1e>
     2ae:	82 30       	cpi	r24, 0x02	; 2
     2b0:	c9 f0       	breq	.+50     	; 0x2e4 <DIO_voidGetPinValue+0x4a>
     2b2:	83 30       	cpi	r24, 0x03	; 3
     2b4:	11 f1       	breq	.+68     	; 0x2fa <DIO_voidGetPinValue+0x60>
     2b6:	08 95       	ret
     2b8:	89 b3       	in	r24, 0x19	; 25
     2ba:	90 e0       	ldi	r25, 0x00	; 0
     2bc:	02 c0       	rjmp	.+4      	; 0x2c2 <DIO_voidGetPinValue+0x28>
     2be:	95 95       	asr	r25
     2c0:	87 95       	ror	r24
     2c2:	6a 95       	dec	r22
     2c4:	e2 f7       	brpl	.-8      	; 0x2be <DIO_voidGetPinValue+0x24>
     2c6:	81 70       	andi	r24, 0x01	; 1
     2c8:	fa 01       	movw	r30, r20
     2ca:	80 83       	st	Z, r24
     2cc:	08 95       	ret
     2ce:	86 b3       	in	r24, 0x16	; 22
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <DIO_voidGetPinValue+0x3e>
     2d4:	95 95       	asr	r25
     2d6:	87 95       	ror	r24
     2d8:	6a 95       	dec	r22
     2da:	e2 f7       	brpl	.-8      	; 0x2d4 <DIO_voidGetPinValue+0x3a>
     2dc:	81 70       	andi	r24, 0x01	; 1
     2de:	fa 01       	movw	r30, r20
     2e0:	80 83       	st	Z, r24
     2e2:	08 95       	ret
     2e4:	83 b3       	in	r24, 0x13	; 19
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	02 c0       	rjmp	.+4      	; 0x2ee <DIO_voidGetPinValue+0x54>
     2ea:	95 95       	asr	r25
     2ec:	87 95       	ror	r24
     2ee:	6a 95       	dec	r22
     2f0:	e2 f7       	brpl	.-8      	; 0x2ea <DIO_voidGetPinValue+0x50>
     2f2:	81 70       	andi	r24, 0x01	; 1
     2f4:	fa 01       	movw	r30, r20
     2f6:	80 83       	st	Z, r24
     2f8:	08 95       	ret
     2fa:	80 b3       	in	r24, 0x10	; 16
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	02 c0       	rjmp	.+4      	; 0x304 <DIO_voidGetPinValue+0x6a>
     300:	95 95       	asr	r25
     302:	87 95       	ror	r24
     304:	6a 95       	dec	r22
     306:	e2 f7       	brpl	.-8      	; 0x300 <DIO_voidGetPinValue+0x66>
     308:	81 70       	andi	r24, 0x01	; 1
     30a:	fa 01       	movw	r30, r20
     30c:	80 83       	st	Z, r24
     30e:	08 95       	ret

00000310 <DIO_voidActivePinInPullUpResistance>:
     310:	84 30       	cpi	r24, 0x04	; 4
     312:	a8 f5       	brcc	.+106    	; 0x37e <DIO_voidActivePinInPullUpResistance+0x6e>
     314:	68 30       	cpi	r22, 0x08	; 8
     316:	98 f5       	brcc	.+102    	; 0x37e <DIO_voidActivePinInPullUpResistance+0x6e>
     318:	81 30       	cpi	r24, 0x01	; 1
     31a:	89 f0       	breq	.+34     	; 0x33e <DIO_voidActivePinInPullUpResistance+0x2e>
     31c:	28 f0       	brcs	.+10     	; 0x328 <DIO_voidActivePinInPullUpResistance+0x18>
     31e:	82 30       	cpi	r24, 0x02	; 2
     320:	c9 f0       	breq	.+50     	; 0x354 <DIO_voidActivePinInPullUpResistance+0x44>
     322:	83 30       	cpi	r24, 0x03	; 3
     324:	11 f1       	breq	.+68     	; 0x36a <DIO_voidActivePinInPullUpResistance+0x5a>
     326:	08 95       	ret
     328:	2b b3       	in	r18, 0x1b	; 27
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	02 c0       	rjmp	.+4      	; 0x334 <DIO_voidActivePinInPullUpResistance+0x24>
     330:	88 0f       	add	r24, r24
     332:	99 1f       	adc	r25, r25
     334:	6a 95       	dec	r22
     336:	e2 f7       	brpl	.-8      	; 0x330 <DIO_voidActivePinInPullUpResistance+0x20>
     338:	82 2b       	or	r24, r18
     33a:	8b bb       	out	0x1b, r24	; 27
     33c:	08 95       	ret
     33e:	28 b3       	in	r18, 0x18	; 24
     340:	81 e0       	ldi	r24, 0x01	; 1
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_voidActivePinInPullUpResistance+0x3a>
     346:	88 0f       	add	r24, r24
     348:	99 1f       	adc	r25, r25
     34a:	6a 95       	dec	r22
     34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_voidActivePinInPullUpResistance+0x36>
     34e:	82 2b       	or	r24, r18
     350:	88 bb       	out	0x18, r24	; 24
     352:	08 95       	ret
     354:	25 b3       	in	r18, 0x15	; 21
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_voidActivePinInPullUpResistance+0x50>
     35c:	88 0f       	add	r24, r24
     35e:	99 1f       	adc	r25, r25
     360:	6a 95       	dec	r22
     362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_voidActivePinInPullUpResistance+0x4c>
     364:	82 2b       	or	r24, r18
     366:	85 bb       	out	0x15, r24	; 21
     368:	08 95       	ret
     36a:	22 b3       	in	r18, 0x12	; 18
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	02 c0       	rjmp	.+4      	; 0x376 <DIO_voidActivePinInPullUpResistance+0x66>
     372:	88 0f       	add	r24, r24
     374:	99 1f       	adc	r25, r25
     376:	6a 95       	dec	r22
     378:	e2 f7       	brpl	.-8      	; 0x372 <DIO_voidActivePinInPullUpResistance+0x62>
     37a:	82 2b       	or	r24, r18
     37c:	82 bb       	out	0x12, r24	; 18
     37e:	08 95       	ret

00000380 <KPD_voidInit>:
 * @retVal void
 */
void KPD_voidInit(void)
{
	/* Config ROWS pins as I/P pins */ 
	DIO_voidSetPinDirection(KPD_ROW0_PORT, KPD_ROW0_PIN, DIO_PIN_INPUT);
     380:	40 e0       	ldi	r20, 0x00	; 0
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_ROW1_PORT, KPD_ROW1_PIN, DIO_PIN_INPUT);
     38a:	40 e0       	ldi	r20, 0x00	; 0
     38c:	61 e0       	ldi	r22, 0x01	; 1
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_ROW2_PORT, KPD_ROW2_PIN, DIO_PIN_INPUT);
     394:	40 e0       	ldi	r20, 0x00	; 0
     396:	62 e0       	ldi	r22, 0x02	; 2
     398:	80 e0       	ldi	r24, 0x00	; 0
     39a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_ROW3_PORT, KPD_ROW3_PIN, DIO_PIN_INPUT);
     39e:	40 e0       	ldi	r20, 0x00	; 0
     3a0:	63 e0       	ldi	r22, 0x03	; 3
     3a2:	80 e0       	ldi	r24, 0x00	; 0
     3a4:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>

	/* Activate Internal pull up for ROWS pins */ 
	DIO_voidActivePinInPullUpResistance(KPD_ROW0_PORT, KPD_ROW0_PIN);
     3a8:	60 e0       	ldi	r22, 0x00	; 0
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	0e 94 88 01 	call	0x310	; 0x310 <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_ROW1_PORT, KPD_ROW1_PIN);
     3b0:	61 e0       	ldi	r22, 0x01	; 1
     3b2:	80 e0       	ldi	r24, 0x00	; 0
     3b4:	0e 94 88 01 	call	0x310	; 0x310 <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_ROW2_PORT, KPD_ROW2_PIN);
     3b8:	62 e0       	ldi	r22, 0x02	; 2
     3ba:	80 e0       	ldi	r24, 0x00	; 0
     3bc:	0e 94 88 01 	call	0x310	; 0x310 <DIO_voidActivePinInPullUpResistance>
	DIO_voidActivePinInPullUpResistance(KPD_ROW3_PORT, KPD_ROW3_PIN);
     3c0:	63 e0       	ldi	r22, 0x03	; 3
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	0e 94 88 01 	call	0x310	; 0x310 <DIO_voidActivePinInPullUpResistance>

	/* Config COLS pins as O/P pins */
	DIO_voidSetPinDirection(KPD_COL0_PORT, KPD_COL0_PIN, DIO_PIN_OUTPUT);
     3c8:	41 e0       	ldi	r20, 0x01	; 1
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_COL1_PORT, KPD_COL1_PIN, DIO_PIN_OUTPUT);
     3d2:	41 e0       	ldi	r20, 0x01	; 1
     3d4:	61 e0       	ldi	r22, 0x01	; 1
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_COL2_PORT, KPD_COL2_PIN, DIO_PIN_OUTPUT);
     3dc:	41 e0       	ldi	r20, 0x01	; 1
     3de:	62 e0       	ldi	r22, 0x02	; 2
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(KPD_COL3_PORT, KPD_COL3_PIN, DIO_PIN_OUTPUT);
     3e6:	41 e0       	ldi	r20, 0x01	; 1
     3e8:	63 e0       	ldi	r22, 0x03	; 3
     3ea:	81 e0       	ldi	r24, 0x01	; 1
     3ec:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>

	/* Set COLS pins as Initialy high */ 
	DIO_voidSetPinValue(KPD_COL0_PORT, KPD_COL0_PIN, DIO_PIN_HIGH);
     3f0:	41 e0       	ldi	r20, 0x01	; 1
     3f2:	60 e0       	ldi	r22, 0x00	; 0
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_COL1_PORT, KPD_COL1_PIN, DIO_PIN_HIGH);
     3fa:	41 e0       	ldi	r20, 0x01	; 1
     3fc:	61 e0       	ldi	r22, 0x01	; 1
     3fe:	81 e0       	ldi	r24, 0x01	; 1
     400:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_COL2_PORT, KPD_COL2_PIN, DIO_PIN_HIGH);
     404:	41 e0       	ldi	r20, 0x01	; 1
     406:	62 e0       	ldi	r22, 0x02	; 2
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(KPD_COL3_PORT, KPD_COL3_PIN, DIO_PIN_HIGH);
     40e:	41 e0       	ldi	r20, 0x01	; 1
     410:	63 e0       	ldi	r22, 0x03	; 3
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     418:	08 95       	ret

0000041a <KPD_voidGetValue>:
 * @brief the function Loop on COLS and activate each one, Loop on ROWS and check each one  
 * @param[out] copy_pu8ReturnedValue: The ASCII of pressed key if there is one.
 * @retVal void
 */
void KPD_voidGetValue(u8* copy_pu8ReturnedValue)
{
     41a:	6f 92       	push	r6
     41c:	7f 92       	push	r7
     41e:	8f 92       	push	r8
     420:	9f 92       	push	r9
     422:	af 92       	push	r10
     424:	bf 92       	push	r11
     426:	cf 92       	push	r12
     428:	df 92       	push	r13
     42a:	ef 92       	push	r14
     42c:	ff 92       	push	r15
     42e:	0f 93       	push	r16
     430:	1f 93       	push	r17
     432:	cf 93       	push	r28
     434:	df 93       	push	r29
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	a1 97       	sbiw	r28, 0x21	; 33
     43c:	0f b6       	in	r0, 0x3f	; 63
     43e:	f8 94       	cli
     440:	de bf       	out	0x3e, r29	; 62
     442:	0f be       	out	0x3f, r0	; 63
     444:	cd bf       	out	0x3d, r28	; 61
	if(copy_pu8ReturnedValue != NULL)
     446:	00 97       	sbiw	r24, 0x00	; 0
     448:	09 f4       	brne	.+2      	; 0x44c <KPD_voidGetValue+0x32>
     44a:	7d c0       	rjmp	.+250    	; 0x546 <KPD_voidGetValue+0x12c>
     44c:	5c 01       	movw	r10, r24
	{
		u8 local_u8ColsCounter, local_u8RowsCounter;
		u8 local_u8PinState;
		u8 local_u8ColsPorts[4] = {KPD_COL0_PORT, KPD_COL1_PORT, KPD_COL2_PORT, KPD_COL3_PORT};
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	8d 8f       	std	Y+29, r24	; 0x1d
     452:	8e 8f       	std	Y+30, r24	; 0x1e
     454:	8f 8f       	std	Y+31, r24	; 0x1f
     456:	88 a3       	std	Y+32, r24	; 0x20
		u8 local_u8ColsPins [4] = {KPD_COL0_PIN , KPD_COL1_PIN , KPD_COL2_PIN , KPD_COL3_PIN};
     458:	19 8e       	std	Y+25, r1	; 0x19
     45a:	8a 8f       	std	Y+26, r24	; 0x1a
     45c:	22 e0       	ldi	r18, 0x02	; 2
     45e:	2b 8f       	std	Y+27, r18	; 0x1b
     460:	93 e0       	ldi	r25, 0x03	; 3
     462:	9c 8f       	std	Y+28, r25	; 0x1c
		u8 local_u8RowsPorts[4] = {KPD_ROW0_PORT, KPD_ROW1_PORT, KPD_ROW2_PORT, KPD_ROW3_PORT};
     464:	1d 8a       	std	Y+21, r1	; 0x15
     466:	1e 8a       	std	Y+22, r1	; 0x16
     468:	1f 8a       	std	Y+23, r1	; 0x17
     46a:	18 8e       	std	Y+24, r1	; 0x18
		u8 local_u8RowsPins [4] = {KPD_ROW0_PIN , KPD_ROW1_PIN , KPD_ROW2_PIN , KPD_ROW3_PIN};
     46c:	19 8a       	std	Y+17, r1	; 0x11
     46e:	8a 8b       	std	Y+18, r24	; 0x12
     470:	2b 8b       	std	Y+19, r18	; 0x13
     472:	9c 8b       	std	Y+20, r25	; 0x14
		u8 local_u8KPD_Chars[4][4] = KPD_KEYS; 
     474:	80 e1       	ldi	r24, 0x10	; 16
     476:	e1 e6       	ldi	r30, 0x61	; 97
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	de 01       	movw	r26, r28
     47c:	11 96       	adiw	r26, 0x01	; 1
     47e:	01 90       	ld	r0, Z+
     480:	0d 92       	st	X+, r0
     482:	8a 95       	dec	r24
     484:	e1 f7       	brne	.-8      	; 0x47e <KPD_voidGetValue+0x64>

		*copy_pu8ReturnedValue = KPD_NOT_PRESSED;
     486:	8f ef       	ldi	r24, 0xFF	; 255
     488:	f5 01       	movw	r30, r10
     48a:	80 83       	st	Z, r24
		for(local_u8ColsCounter = 0;local_u8ColsCounter < 4; local_u8ColsCounter++)
     48c:	00 e0       	ldi	r16, 0x00	; 0
     48e:	58 c0       	rjmp	.+176    	; 0x540 <KPD_voidGetValue+0x126>
		{
			/* Activate Each Column with low value */
			DIO_voidSetPinValue(local_u8ColsPorts[local_u8ColsCounter], local_u8ColsPins[local_u8ColsCounter], DIO_PIN_LOW);
     490:	c0 2e       	mov	r12, r16
     492:	d1 2c       	mov	r13, r1
     494:	e9 e1       	ldi	r30, 0x19	; 25
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	ec 0f       	add	r30, r28
     49a:	fd 1f       	adc	r31, r29
     49c:	ec 0d       	add	r30, r12
     49e:	fd 1d       	adc	r31, r13
     4a0:	80 80       	ld	r8, Z
     4a2:	ed e1       	ldi	r30, 0x1D	; 29
     4a4:	f0 e0       	ldi	r31, 0x00	; 0
     4a6:	ec 0f       	add	r30, r28
     4a8:	fd 1f       	adc	r31, r29
     4aa:	ec 0d       	add	r30, r12
     4ac:	fd 1d       	adc	r31, r13
     4ae:	90 80       	ld	r9, Z
     4b0:	40 e0       	ldi	r20, 0x00	; 0
     4b2:	68 2d       	mov	r22, r8
     4b4:	89 2d       	mov	r24, r9
     4b6:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>

			for(local_u8RowsCounter = 0; local_u8RowsCounter < 4; local_u8RowsCounter++)
     4ba:	10 e0       	ldi	r17, 0x00	; 0
     4bc:	37 c0       	rjmp	.+110    	; 0x52c <KPD_voidGetValue+0x112>
			{
				/* Check Each Row (if == 0?) */
				DIO_voidGetPinValue(local_u8RowsPorts[local_u8RowsCounter], local_u8RowsPins[local_u8RowsCounter], &local_u8PinState);
     4be:	e1 2e       	mov	r14, r17
     4c0:	f1 2c       	mov	r15, r1
     4c2:	e1 e1       	ldi	r30, 0x11	; 17
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	ec 0f       	add	r30, r28
     4c8:	fd 1f       	adc	r31, r29
     4ca:	ee 0d       	add	r30, r14
     4cc:	ff 1d       	adc	r31, r15
     4ce:	70 80       	ld	r7, Z
     4d0:	e5 e1       	ldi	r30, 0x15	; 21
     4d2:	f0 e0       	ldi	r31, 0x00	; 0
     4d4:	ec 0f       	add	r30, r28
     4d6:	fd 1f       	adc	r31, r29
     4d8:	ee 0d       	add	r30, r14
     4da:	ff 1d       	adc	r31, r15
     4dc:	60 80       	ld	r6, Z
     4de:	ae 01       	movw	r20, r28
     4e0:	4f 5d       	subi	r20, 0xDF	; 223
     4e2:	5f 4f       	sbci	r21, 0xFF	; 255
     4e4:	67 2d       	mov	r22, r7
     4e6:	86 2d       	mov	r24, r6
     4e8:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_voidGetPinValue>

				/* Is Pressed? */
				if(0 == local_u8PinState)
     4ec:	89 a1       	ldd	r24, Y+33	; 0x21
     4ee:	81 11       	cpse	r24, r1
     4f0:	1c c0       	rjmp	.+56     	; 0x52a <KPD_voidGetValue+0x110>
     4f2:	07 c0       	rjmp	.+14     	; 0x502 <KPD_voidGetValue+0xe8>
				{
					while(0 == local_u8PinState)
					{
						DIO_voidGetPinValue(local_u8RowsPorts[local_u8RowsCounter], local_u8RowsPins[local_u8RowsCounter], &local_u8PinState);
     4f4:	ae 01       	movw	r20, r28
     4f6:	4f 5d       	subi	r20, 0xDF	; 223
     4f8:	5f 4f       	sbci	r21, 0xFF	; 255
     4fa:	67 2d       	mov	r22, r7
     4fc:	86 2d       	mov	r24, r6
     4fe:	0e 94 4d 01 	call	0x29a	; 0x29a <DIO_voidGetPinValue>
				DIO_voidGetPinValue(local_u8RowsPorts[local_u8RowsCounter], local_u8RowsPins[local_u8RowsCounter], &local_u8PinState);

				/* Is Pressed? */
				if(0 == local_u8PinState)
				{
					while(0 == local_u8PinState)
     502:	89 a1       	ldd	r24, Y+33	; 0x21
     504:	88 23       	and	r24, r24
     506:	b1 f3       	breq	.-20     	; 0x4f4 <KPD_voidGetValue+0xda>
					{
						DIO_voidGetPinValue(local_u8RowsPorts[local_u8RowsCounter], local_u8RowsPins[local_u8RowsCounter], &local_u8PinState);
					}
					*copy_pu8ReturnedValue = local_u8KPD_Chars[local_u8RowsCounter][local_u8ColsCounter];
     508:	ee 0c       	add	r14, r14
     50a:	ff 1c       	adc	r15, r15
     50c:	ee 0c       	add	r14, r14
     50e:	ff 1c       	adc	r15, r15
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	8c 0f       	add	r24, r28
     516:	9d 1f       	adc	r25, r29
     518:	e8 0e       	add	r14, r24
     51a:	f9 1e       	adc	r15, r25
     51c:	f7 01       	movw	r30, r14
     51e:	ec 0d       	add	r30, r12
     520:	fd 1d       	adc	r31, r13
     522:	80 81       	ld	r24, Z
     524:	f5 01       	movw	r30, r10
     526:	80 83       	st	Z, r24
					break;
     528:	03 c0       	rjmp	.+6      	; 0x530 <KPD_voidGetValue+0x116>
		for(local_u8ColsCounter = 0;local_u8ColsCounter < 4; local_u8ColsCounter++)
		{
			/* Activate Each Column with low value */
			DIO_voidSetPinValue(local_u8ColsPorts[local_u8ColsCounter], local_u8ColsPins[local_u8ColsCounter], DIO_PIN_LOW);

			for(local_u8RowsCounter = 0; local_u8RowsCounter < 4; local_u8RowsCounter++)
     52a:	1f 5f       	subi	r17, 0xFF	; 255
     52c:	14 30       	cpi	r17, 0x04	; 4
     52e:	38 f2       	brcs	.-114    	; 0x4be <KPD_voidGetValue+0xa4>
					break;
				}
			}

			/* Deactivate Current Column with high value */
			DIO_voidSetPinValue(local_u8ColsPorts[local_u8ColsCounter], local_u8ColsPins[local_u8ColsCounter], DIO_PIN_HIGH);
     530:	41 e0       	ldi	r20, 0x01	; 1
     532:	68 2d       	mov	r22, r8
     534:	89 2d       	mov	r24, r9
     536:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>

			if(local_u8RowsCounter < 4)
     53a:	14 30       	cpi	r17, 0x04	; 4
     53c:	20 f0       	brcs	.+8      	; 0x546 <KPD_voidGetValue+0x12c>
		u8 local_u8RowsPorts[4] = {KPD_ROW0_PORT, KPD_ROW1_PORT, KPD_ROW2_PORT, KPD_ROW3_PORT};
		u8 local_u8RowsPins [4] = {KPD_ROW0_PIN , KPD_ROW1_PIN , KPD_ROW2_PIN , KPD_ROW3_PIN};
		u8 local_u8KPD_Chars[4][4] = KPD_KEYS; 

		*copy_pu8ReturnedValue = KPD_NOT_PRESSED;
		for(local_u8ColsCounter = 0;local_u8ColsCounter < 4; local_u8ColsCounter++)
     53e:	0f 5f       	subi	r16, 0xFF	; 255
     540:	04 30       	cpi	r16, 0x04	; 4
     542:	08 f4       	brcc	.+2      	; 0x546 <KPD_voidGetValue+0x12c>
     544:	a5 cf       	rjmp	.-182    	; 0x490 <KPD_voidGetValue+0x76>
	}
	else
	{
		// return Error State
	}
}
     546:	a1 96       	adiw	r28, 0x21	; 33
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	f8 94       	cli
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	0f be       	out	0x3f, r0	; 63
     550:	cd bf       	out	0x3d, r28	; 61
     552:	df 91       	pop	r29
     554:	cf 91       	pop	r28
     556:	1f 91       	pop	r17
     558:	0f 91       	pop	r16
     55a:	ff 90       	pop	r15
     55c:	ef 90       	pop	r14
     55e:	df 90       	pop	r13
     560:	cf 90       	pop	r12
     562:	bf 90       	pop	r11
     564:	af 90       	pop	r10
     566:	9f 90       	pop	r9
     568:	8f 90       	pop	r8
     56a:	7f 90       	pop	r7
     56c:	6f 90       	pop	r6
     56e:	08 95       	ret

00000570 <PRV_voidWriteHalfPort>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     570:	cf 93       	push	r28
     572:	c8 2f       	mov	r28, r24
     574:	80 fd       	sbrc	r24, 0
     576:	06 c0       	rjmp	.+12     	; 0x584 <PRV_voidWriteHalfPort+0x14>
     578:	40 e0       	ldi	r20, 0x00	; 0
     57a:	64 e0       	ldi	r22, 0x04	; 4
     57c:	82 e0       	ldi	r24, 0x02	; 2
     57e:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     582:	05 c0       	rjmp	.+10     	; 0x58e <PRV_voidWriteHalfPort+0x1e>
     584:	41 e0       	ldi	r20, 0x01	; 1
     586:	64 e0       	ldi	r22, 0x04	; 4
     588:	82 e0       	ldi	r24, 0x02	; 2
     58a:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     58e:	c1 fd       	sbrc	r28, 1
     590:	06 c0       	rjmp	.+12     	; 0x59e <PRV_voidWriteHalfPort+0x2e>
     592:	40 e0       	ldi	r20, 0x00	; 0
     594:	65 e0       	ldi	r22, 0x05	; 5
     596:	82 e0       	ldi	r24, 0x02	; 2
     598:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     59c:	05 c0       	rjmp	.+10     	; 0x5a8 <PRV_voidWriteHalfPort+0x38>
     59e:	41 e0       	ldi	r20, 0x01	; 1
     5a0:	65 e0       	ldi	r22, 0x05	; 5
     5a2:	82 e0       	ldi	r24, 0x02	; 2
     5a4:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     5a8:	c2 fd       	sbrc	r28, 2
     5aa:	06 c0       	rjmp	.+12     	; 0x5b8 <PRV_voidWriteHalfPort+0x48>
     5ac:	40 e0       	ldi	r20, 0x00	; 0
     5ae:	66 e0       	ldi	r22, 0x06	; 6
     5b0:	82 e0       	ldi	r24, 0x02	; 2
     5b2:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     5b6:	05 c0       	rjmp	.+10     	; 0x5c2 <PRV_voidWriteHalfPort+0x52>
     5b8:	41 e0       	ldi	r20, 0x01	; 1
     5ba:	66 e0       	ldi	r22, 0x06	; 6
     5bc:	82 e0       	ldi	r24, 0x02	; 2
     5be:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     5c2:	c3 fd       	sbrc	r28, 3
     5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <PRV_voidWriteHalfPort+0x62>
     5c6:	40 e0       	ldi	r20, 0x00	; 0
     5c8:	67 e0       	ldi	r22, 0x07	; 7
     5ca:	82 e0       	ldi	r24, 0x02	; 2
     5cc:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     5d0:	05 c0       	rjmp	.+10     	; 0x5dc <PRV_voidWriteHalfPort+0x6c>
     5d2:	41 e0       	ldi	r20, 0x01	; 1
     5d4:	67 e0       	ldi	r22, 0x07	; 7
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     5dc:	cf 91       	pop	r28
     5de:	08 95       	ret

000005e0 <PRV_voidEnableTriggerWrite>:
     5e0:	41 e0       	ldi	r20, 0x01	; 1
     5e2:	60 e0       	ldi	r22, 0x00	; 0
     5e4:	82 e0       	ldi	r24, 0x02	; 2
     5e6:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     5ea:	8f e9       	ldi	r24, 0x9F	; 159
     5ec:	9f e0       	ldi	r25, 0x0F	; 15
     5ee:	01 97       	sbiw	r24, 0x01	; 1
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <PRV_voidEnableTriggerWrite+0xe>
     5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <PRV_voidEnableTriggerWrite+0x14>
     5f4:	00 00       	nop
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	60 e0       	ldi	r22, 0x00	; 0
     5fa:	82 e0       	ldi	r24, 0x02	; 2
     5fc:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     600:	08 95       	ret

00000602 <LCD_voidDisplayChar>:
     602:	cf 93       	push	r28
     604:	c8 2f       	mov	r28, r24
     606:	41 e0       	ldi	r20, 0x01	; 1
     608:	61 e0       	ldi	r22, 0x01	; 1
     60a:	82 e0       	ldi	r24, 0x02	; 2
     60c:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     610:	40 e0       	ldi	r20, 0x00	; 0
     612:	62 e0       	ldi	r22, 0x02	; 2
     614:	82 e0       	ldi	r24, 0x02	; 2
     616:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     61a:	8c 2f       	mov	r24, r28
     61c:	82 95       	swap	r24
     61e:	8f 70       	andi	r24, 0x0F	; 15
     620:	0e 94 b8 02 	call	0x570	; 0x570 <PRV_voidWriteHalfPort>
     624:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <PRV_voidEnableTriggerWrite>
     628:	8c 2f       	mov	r24, r28
     62a:	0e 94 b8 02 	call	0x570	; 0x570 <PRV_voidWriteHalfPort>
     62e:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <PRV_voidEnableTriggerWrite>
     632:	cf 91       	pop	r28
     634:	08 95       	ret

00000636 <LCD_voidSendCommand>:
     636:	cf 93       	push	r28
     638:	c8 2f       	mov	r28, r24
     63a:	40 e0       	ldi	r20, 0x00	; 0
     63c:	61 e0       	ldi	r22, 0x01	; 1
     63e:	82 e0       	ldi	r24, 0x02	; 2
     640:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     644:	40 e0       	ldi	r20, 0x00	; 0
     646:	62 e0       	ldi	r22, 0x02	; 2
     648:	82 e0       	ldi	r24, 0x02	; 2
     64a:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     64e:	8c 2f       	mov	r24, r28
     650:	82 95       	swap	r24
     652:	8f 70       	andi	r24, 0x0F	; 15
     654:	0e 94 b8 02 	call	0x570	; 0x570 <PRV_voidWriteHalfPort>
     658:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <PRV_voidEnableTriggerWrite>
     65c:	8c 2f       	mov	r24, r28
     65e:	0e 94 b8 02 	call	0x570	; 0x570 <PRV_voidWriteHalfPort>
     662:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <PRV_voidEnableTriggerWrite>
     666:	cf 91       	pop	r28
     668:	08 95       	ret

0000066a <LCD_voidInit>:
     66a:	41 e0       	ldi	r20, 0x01	; 1
     66c:	61 e0       	ldi	r22, 0x01	; 1
     66e:	82 e0       	ldi	r24, 0x02	; 2
     670:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     674:	41 e0       	ldi	r20, 0x01	; 1
     676:	62 e0       	ldi	r22, 0x02	; 2
     678:	82 e0       	ldi	r24, 0x02	; 2
     67a:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     67e:	41 e0       	ldi	r20, 0x01	; 1
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	82 e0       	ldi	r24, 0x02	; 2
     684:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     688:	41 e0       	ldi	r20, 0x01	; 1
     68a:	64 e0       	ldi	r22, 0x04	; 4
     68c:	82 e0       	ldi	r24, 0x02	; 2
     68e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     692:	41 e0       	ldi	r20, 0x01	; 1
     694:	65 e0       	ldi	r22, 0x05	; 5
     696:	82 e0       	ldi	r24, 0x02	; 2
     698:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     69c:	41 e0       	ldi	r20, 0x01	; 1
     69e:	66 e0       	ldi	r22, 0x06	; 6
     6a0:	82 e0       	ldi	r24, 0x02	; 2
     6a2:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     6a6:	41 e0       	ldi	r20, 0x01	; 1
     6a8:	67 e0       	ldi	r22, 0x07	; 7
     6aa:	82 e0       	ldi	r24, 0x02	; 2
     6ac:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>
     6b0:	2f e7       	ldi	r18, 0x7F	; 127
     6b2:	85 eb       	ldi	r24, 0xB5	; 181
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	21 50       	subi	r18, 0x01	; 1
     6b8:	80 40       	sbci	r24, 0x00	; 0
     6ba:	90 40       	sbci	r25, 0x00	; 0
     6bc:	e1 f7       	brne	.-8      	; 0x6b6 <LCD_voidInit+0x4c>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <LCD_voidInit+0x56>
     6c0:	00 00       	nop
     6c2:	40 e0       	ldi	r20, 0x00	; 0
     6c4:	61 e0       	ldi	r22, 0x01	; 1
     6c6:	82 e0       	ldi	r24, 0x02	; 2
     6c8:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     6cc:	40 e0       	ldi	r20, 0x00	; 0
     6ce:	62 e0       	ldi	r22, 0x02	; 2
     6d0:	82 e0       	ldi	r24, 0x02	; 2
     6d2:	0e 94 cb 00 	call	0x196	; 0x196 <DIO_voidSetPinValue>
     6d6:	82 e0       	ldi	r24, 0x02	; 2
     6d8:	0e 94 b8 02 	call	0x570	; 0x570 <PRV_voidWriteHalfPort>
     6dc:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <PRV_voidEnableTriggerWrite>
     6e0:	88 e2       	ldi	r24, 0x28	; 40
     6e2:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_voidSendCommand>
     6e6:	20 ef       	ldi	r18, 0xF0	; 240
     6e8:	2a 95       	dec	r18
     6ea:	f1 f7       	brne	.-4      	; 0x6e8 <LCD_voidInit+0x7e>
     6ec:	8f e0       	ldi	r24, 0x0F	; 15
     6ee:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_voidSendCommand>
     6f2:	80 ef       	ldi	r24, 0xF0	; 240
     6f4:	8a 95       	dec	r24
     6f6:	f1 f7       	brne	.-4      	; 0x6f4 <LCD_voidInit+0x8a>
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_voidSendCommand>
     6fe:	8f e3       	ldi	r24, 0x3F	; 63
     700:	9f e1       	ldi	r25, 0x1F	; 31
     702:	01 97       	sbiw	r24, 0x01	; 1
     704:	f1 f7       	brne	.-4      	; 0x702 <LCD_voidInit+0x98>
     706:	00 c0       	rjmp	.+0      	; 0x708 <LCD_voidInit+0x9e>
     708:	00 00       	nop
     70a:	86 e0       	ldi	r24, 0x06	; 6
     70c:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_voidSendCommand>
     710:	08 95       	ret

00000712 <LCD_voidDisplayString>:
     712:	0f 93       	push	r16
     714:	1f 93       	push	r17
     716:	cf 93       	push	r28
     718:	00 97       	sbiw	r24, 0x00	; 0
     71a:	29 f4       	brne	.+10     	; 0x726 <LCD_voidDisplayString+0x14>
     71c:	0c c0       	rjmp	.+24     	; 0x736 <LCD_voidDisplayString+0x24>
     71e:	0e 94 01 03 	call	0x602	; 0x602 <LCD_voidDisplayChar>
     722:	cf 5f       	subi	r28, 0xFF	; 255
     724:	02 c0       	rjmp	.+4      	; 0x72a <LCD_voidDisplayString+0x18>
     726:	8c 01       	movw	r16, r24
     728:	c0 e0       	ldi	r28, 0x00	; 0
     72a:	f8 01       	movw	r30, r16
     72c:	ec 0f       	add	r30, r28
     72e:	f1 1d       	adc	r31, r1
     730:	80 81       	ld	r24, Z
     732:	81 11       	cpse	r24, r1
     734:	f4 cf       	rjmp	.-24     	; 0x71e <LCD_voidDisplayString+0xc>
     736:	cf 91       	pop	r28
     738:	1f 91       	pop	r17
     73a:	0f 91       	pop	r16
     73c:	08 95       	ret

0000073e <LCD_voidClear>:
     73e:	81 e0       	ldi	r24, 0x01	; 1
     740:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_voidSendCommand>
     744:	8f e3       	ldi	r24, 0x3F	; 63
     746:	9f e1       	ldi	r25, 0x1F	; 31
     748:	01 97       	sbiw	r24, 0x01	; 1
     74a:	f1 f7       	brne	.-4      	; 0x748 <LCD_voidClear+0xa>
     74c:	00 c0       	rjmp	.+0      	; 0x74e <LCD_voidClear+0x10>
     74e:	00 00       	nop
     750:	08 95       	ret

00000752 <LCD_voidDisplayNumber>:
     752:	cf 92       	push	r12
     754:	df 92       	push	r13
     756:	ef 92       	push	r14
     758:	ff 92       	push	r15
     75a:	0f 93       	push	r16
     75c:	1f 93       	push	r17
     75e:	8b 01       	movw	r16, r22
     760:	9c 01       	movw	r18, r24
     762:	67 2b       	or	r22, r23
     764:	68 2b       	or	r22, r24
     766:	69 2b       	or	r22, r25
     768:	49 f5       	brne	.+82     	; 0x7bc <LCD_voidDisplayNumber+0x6a>
     76a:	80 e3       	ldi	r24, 0x30	; 48
     76c:	0e 94 01 03 	call	0x602	; 0x602 <LCD_voidDisplayChar>
     770:	45 c0       	rjmp	.+138    	; 0x7fc <LCD_voidDisplayNumber+0xaa>
     772:	dc 01       	movw	r26, r24
     774:	cb 01       	movw	r24, r22
     776:	88 0f       	add	r24, r24
     778:	99 1f       	adc	r25, r25
     77a:	aa 1f       	adc	r26, r26
     77c:	bb 1f       	adc	r27, r27
     77e:	6c 01       	movw	r12, r24
     780:	7d 01       	movw	r14, r26
     782:	cc 0c       	add	r12, r12
     784:	dd 1c       	adc	r13, r13
     786:	ee 1c       	adc	r14, r14
     788:	ff 1c       	adc	r15, r15
     78a:	cc 0c       	add	r12, r12
     78c:	dd 1c       	adc	r13, r13
     78e:	ee 1c       	adc	r14, r14
     790:	ff 1c       	adc	r15, r15
     792:	c8 0e       	add	r12, r24
     794:	d9 1e       	adc	r13, r25
     796:	ea 1e       	adc	r14, r26
     798:	fb 1e       	adc	r15, r27
     79a:	c9 01       	movw	r24, r18
     79c:	b8 01       	movw	r22, r16
     79e:	2a e0       	ldi	r18, 0x0A	; 10
     7a0:	30 e0       	ldi	r19, 0x00	; 0
     7a2:	40 e0       	ldi	r20, 0x00	; 0
     7a4:	50 e0       	ldi	r21, 0x00	; 0
     7a6:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__udivmodsi4>
     7aa:	6c 0d       	add	r22, r12
     7ac:	7d 1d       	adc	r23, r13
     7ae:	8e 1d       	adc	r24, r14
     7b0:	9f 1d       	adc	r25, r15
     7b2:	02 2f       	mov	r16, r18
     7b4:	13 2f       	mov	r17, r19
     7b6:	24 2f       	mov	r18, r20
     7b8:	35 2f       	mov	r19, r21
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <LCD_voidDisplayNumber+0x72>
     7bc:	61 e0       	ldi	r22, 0x01	; 1
     7be:	70 e0       	ldi	r23, 0x00	; 0
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	01 15       	cp	r16, r1
     7c6:	11 05       	cpc	r17, r1
     7c8:	21 05       	cpc	r18, r1
     7ca:	31 05       	cpc	r19, r1
     7cc:	91 f6       	brne	.-92     	; 0x772 <LCD_voidDisplayNumber+0x20>
     7ce:	2a e0       	ldi	r18, 0x0A	; 10
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	40 e0       	ldi	r20, 0x00	; 0
     7d4:	50 e0       	ldi	r21, 0x00	; 0
     7d6:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__udivmodsi4>
     7da:	e2 2e       	mov	r14, r18
     7dc:	f3 2e       	mov	r15, r19
     7de:	04 2f       	mov	r16, r20
     7e0:	15 2f       	mov	r17, r21
     7e2:	80 e3       	ldi	r24, 0x30	; 48
     7e4:	86 0f       	add	r24, r22
     7e6:	0e 94 01 03 	call	0x602	; 0x602 <LCD_voidDisplayChar>
     7ea:	6e 2d       	mov	r22, r14
     7ec:	7f 2d       	mov	r23, r15
     7ee:	80 2f       	mov	r24, r16
     7f0:	91 2f       	mov	r25, r17
     7f2:	61 30       	cpi	r22, 0x01	; 1
     7f4:	71 05       	cpc	r23, r1
     7f6:	81 05       	cpc	r24, r1
     7f8:	91 05       	cpc	r25, r1
     7fa:	49 f7       	brne	.-46     	; 0x7ce <LCD_voidDisplayNumber+0x7c>
     7fc:	1f 91       	pop	r17
     7fe:	0f 91       	pop	r16
     800:	ff 90       	pop	r15
     802:	ef 90       	pop	r14
     804:	df 90       	pop	r13
     806:	cf 90       	pop	r12
     808:	08 95       	ret

0000080a <main>:

u8 x = KPD_NOT_PRESSED;
int main(void)
{	

	LCD_voidInit();
     80a:	0e 94 35 03 	call	0x66a	; 0x66a <LCD_voidInit>
	KPD_voidInit();
     80e:	0e 94 c0 01 	call	0x380	; 0x380 <KPD_voidInit>
	SRVM_voidInit();
     812:	0e 94 ac 04 	call	0x958	; 0x958 <SRVM_voidInit>
    while (1) 
    {		
			//SRVM_voidOn(90);
		KPD_voidGetValue(&x);
     816:	80 e6       	ldi	r24, 0x60	; 96
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	0e 94 0d 02 	call	0x41a	; 0x41a <KPD_voidGetValue>
		
		if (x != KPD_NOT_PRESSED)
     81e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     822:	8f 3f       	cpi	r24, 0xFF	; 255
     824:	c1 f3       	breq	.-16     	; 0x816 <main+0xc>
		{
			if(x == '1')
     826:	81 33       	cpi	r24, 0x31	; 49
     828:	61 f4       	brne	.+24     	; 0x842 <main+0x38>
			{
				SRVM_voidOn(180);
     82a:	84 eb       	ldi	r24, 0xB4	; 180
     82c:	0e 94 b4 04 	call	0x968	; 0x968 <SRVM_voidOn>
				LCD_voidClear();
     830:	0e 94 9f 03 	call	0x73e	; 0x73e <LCD_voidClear>
				LCD_voidDisplayNumber(90);	
     834:	6a e5       	ldi	r22, 0x5A	; 90
     836:	70 e0       	ldi	r23, 0x00	; 0
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	0e 94 a9 03 	call	0x752	; 0x752 <LCD_voidDisplayNumber>
     840:	ea cf       	rjmp	.-44     	; 0x816 <main+0xc>
			}
			else if(x == '2')
     842:	82 33       	cpi	r24, 0x32	; 50
     844:	59 f4       	brne	.+22     	; 0x85c <main+0x52>
			{
				SRVM_voidOn(90);
     846:	8a e5       	ldi	r24, 0x5A	; 90
     848:	0e 94 b4 04 	call	0x968	; 0x968 <SRVM_voidOn>
				LCD_voidClear();
     84c:	0e 94 9f 03 	call	0x73e	; 0x73e <LCD_voidClear>
				LCD_voidDisplayNumber(0);
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	cb 01       	movw	r24, r22
     856:	0e 94 a9 03 	call	0x752	; 0x752 <LCD_voidDisplayNumber>
     85a:	dd cf       	rjmp	.-70     	; 0x816 <main+0xc>
			}
			else if(x == '3')
     85c:	83 33       	cpi	r24, 0x33	; 51
     85e:	51 f4       	brne	.+20     	; 0x874 <__stack+0x15>
			{
				SRVM_voidOn(0);
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	0e 94 b4 04 	call	0x968	; 0x968 <SRVM_voidOn>
				LCD_voidClear();
     866:	0e 94 9f 03 	call	0x73e	; 0x73e <LCD_voidClear>
				LCD_voidDisplayString("-90");
     86a:	81 e7       	ldi	r24, 0x71	; 113
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 89 03 	call	0x712	; 0x712 <LCD_voidDisplayString>
     872:	d1 cf       	rjmp	.-94     	; 0x816 <main+0xc>
			}
			else if(x == '4')
     874:	84 33       	cpi	r24, 0x34	; 52
     876:	79 f6       	brne	.-98     	; 0x816 <main+0xc>
			{
				SRVM_voidOff();
     878:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <SRVM_voidOff>
				LCD_voidClear();
     87c:	0e 94 9f 03 	call	0x73e	; 0x73e <LCD_voidClear>
				LCD_voidDisplayString("OFF");
     880:	85 e7       	ldi	r24, 0x75	; 117
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	0e 94 89 03 	call	0x712	; 0x712 <LCD_voidDisplayString>
     888:	c6 cf       	rjmp	.-116    	; 0x816 <main+0xc>

0000088a <PWM_voidInitChannel_1A>:
		
		
		// Select Prescaler Value = 64 
		CLR_BIT(TCCR2_REG,CS20);
		CLR_BIT(TCCR2_REG,CS21);
		SET_BIT(TCCR2_REG,CS22);
     88a:	8f b5       	in	r24, 0x2f	; 47
     88c:	8e 7f       	andi	r24, 0xFE	; 254
     88e:	8f bd       	out	0x2f, r24	; 47
     890:	8f b5       	in	r24, 0x2f	; 47
     892:	82 60       	ori	r24, 0x02	; 2
     894:	8f bd       	out	0x2f, r24	; 47
     896:	8e b5       	in	r24, 0x2e	; 46
     898:	88 60       	ori	r24, 0x08	; 8
     89a:	8e bd       	out	0x2e, r24	; 46
     89c:	8e b5       	in	r24, 0x2e	; 46
     89e:	80 61       	ori	r24, 0x10	; 16
     8a0:	8e bd       	out	0x2e, r24	; 46
     8a2:	8f b5       	in	r24, 0x2f	; 47
     8a4:	8f 7b       	andi	r24, 0xBF	; 191
     8a6:	8f bd       	out	0x2f, r24	; 47
     8a8:	8f b5       	in	r24, 0x2f	; 47
     8aa:	80 68       	ori	r24, 0x80	; 128
     8ac:	8f bd       	out	0x2f, r24	; 47
     8ae:	08 95       	ret

000008b0 <PWM_voidGenerate_PWM_Channel_1A>:
     8b0:	cf 92       	push	r12
     8b2:	df 92       	push	r13
     8b4:	ef 92       	push	r14
     8b6:	ff 92       	push	r15
     8b8:	cf 93       	push	r28
     8ba:	df 93       	push	r29
     8bc:	6b 01       	movw	r12, r22
     8be:	7c 01       	movw	r14, r24
     8c0:	ea 01       	movw	r28, r20
     8c2:	20 e0       	ldi	r18, 0x00	; 0
     8c4:	30 e0       	ldi	r19, 0x00	; 0
     8c6:	48 ec       	ldi	r20, 0xC8	; 200
     8c8:	52 e4       	ldi	r21, 0x42	; 66
     8ca:	0e 94 97 06 	call	0xd2e	; 0xd2e <__cmpsf2>
     8ce:	18 16       	cp	r1, r24
     8d0:	94 f1       	brlt	.+100    	; 0x936 <PWM_voidGenerate_PWM_Channel_1A+0x86>
     8d2:	9e 01       	movw	r18, r28
     8d4:	40 e0       	ldi	r20, 0x00	; 0
     8d6:	50 e0       	ldi	r21, 0x00	; 0
     8d8:	60 e9       	ldi	r22, 0x90	; 144
     8da:	70 ed       	ldi	r23, 0xD0	; 208
     8dc:	83 e0       	ldi	r24, 0x03	; 3
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__udivmodsi4>
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	31 09       	sbc	r19, r1
     8e8:	37 bd       	out	0x27, r19	; 39
     8ea:	26 bd       	out	0x26, r18	; 38
     8ec:	66 b5       	in	r22, 0x26	; 38
     8ee:	77 b5       	in	r23, 0x27	; 39
     8f0:	6f 5f       	subi	r22, 0xFF	; 255
     8f2:	7f 4f       	sbci	r23, 0xFF	; 255
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__floatunsisf>
     8fc:	a7 01       	movw	r20, r14
     8fe:	96 01       	movw	r18, r12
     900:	0e 94 ef 07 	call	0xfde	; 0xfde <__mulsf3>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	48 ec       	ldi	r20, 0xC8	; 200
     90a:	52 e4       	ldi	r21, 0x42	; 66
     90c:	0e 94 9c 06 	call	0xd38	; 0xd38 <__divsf3>
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 e8       	ldi	r20, 0x80	; 128
     916:	5f e3       	ldi	r21, 0x3F	; 63
     918:	0e 94 2a 06 	call	0xc54	; 0xc54 <__subsf3>
     91c:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fixunssfsi>
     920:	7b bd       	out	0x2b, r23	; 43
     922:	6a bd       	out	0x2a, r22	; 42
     924:	8e b5       	in	r24, 0x2e	; 46
     926:	81 60       	ori	r24, 0x01	; 1
     928:	8e bd       	out	0x2e, r24	; 46
     92a:	8e b5       	in	r24, 0x2e	; 46
     92c:	82 60       	ori	r24, 0x02	; 2
     92e:	8e bd       	out	0x2e, r24	; 46
     930:	8e b5       	in	r24, 0x2e	; 46
     932:	8b 7f       	andi	r24, 0xFB	; 251
     934:	8e bd       	out	0x2e, r24	; 46
     936:	df 91       	pop	r29
     938:	cf 91       	pop	r28
     93a:	ff 90       	pop	r15
     93c:	ef 90       	pop	r14
     93e:	df 90       	pop	r13
     940:	cf 90       	pop	r12
     942:	08 95       	ret

00000944 <PWM_voidOFFChannel_1A>:
}


void PWM_voidOFFChannel_1A(void)
{
	    CLR_BIT(TCCR1B_REG,CS10);
     944:	8e b5       	in	r24, 0x2e	; 46
     946:	8e 7f       	andi	r24, 0xFE	; 254
     948:	8e bd       	out	0x2e, r24	; 46
	    CLR_BIT(TCCR1B_REG,CS11);
     94a:	8e b5       	in	r24, 0x2e	; 46
     94c:	8d 7f       	andi	r24, 0xFD	; 253
     94e:	8e bd       	out	0x2e, r24	; 46
	    CLR_BIT(TCCR1B_REG,CS12);
     950:	8e b5       	in	r24, 0x2e	; 46
     952:	8b 7f       	andi	r24, 0xFB	; 251
     954:	8e bd       	out	0x2e, r24	; 46
     956:	08 95       	ret

00000958 <SRVM_voidInit>:


void SRVM_voidInit(void)
{
	// set OC1A as Output pin
	DIO_voidSetPinDirection(DIO_PORTD, DIO_PIN5, DIO_PIN_OUTPUT);
     958:	41 e0       	ldi	r20, 0x01	; 1
     95a:	65 e0       	ldi	r22, 0x05	; 5
     95c:	83 e0       	ldi	r24, 0x03	; 3
     95e:	0e 94 49 00 	call	0x92	; 0x92 <DIO_voidSetPinDirection>

	/* PWM init ch1 at pwm mode 14 */
	PWM_voidInitChannel_1A();
     962:	0e 94 45 04 	call	0x88a	; 0x88a <PWM_voidInitChannel_1A>
     966:	08 95       	ret

00000968 <SRVM_voidOn>:
}


void SRVM_voidOn(u8 Copy_u8Angle)
{
	f32 local_f32Duty = (((Copy_u8Angle)/180.0)*5) + 5;
     968:	68 2f       	mov	r22, r24
     96a:	70 e0       	ldi	r23, 0x00	; 0
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__floatsisf>
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	44 e3       	ldi	r20, 0x34	; 52
     97a:	53 e4       	ldi	r21, 0x43	; 67
     97c:	0e 94 9c 06 	call	0xd38	; 0xd38 <__divsf3>
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	40 ea       	ldi	r20, 0xA0	; 160
     986:	50 e4       	ldi	r21, 0x40	; 64
     988:	0e 94 ef 07 	call	0xfde	; 0xfde <__mulsf3>
     98c:	20 e0       	ldi	r18, 0x00	; 0
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	40 ea       	ldi	r20, 0xA0	; 160
     992:	50 e4       	ldi	r21, 0x40	; 64
     994:	0e 94 2b 06 	call	0xc56	; 0xc56 <__addsf3>

	/* Set pwm fre. = 50, duty cycle between 5 : 10 depend on desired angle[0 : 180] */
	PWM_voidGenerate_PWM_Channel_1A(local_f32Duty, SRVM_DESIRED_FREQUENCY);
     998:	42 e3       	ldi	r20, 0x32	; 50
     99a:	50 e0       	ldi	r21, 0x00	; 0
     99c:	0e 94 58 04 	call	0x8b0	; 0x8b0 <PWM_voidGenerate_PWM_Channel_1A>
     9a0:	08 95       	ret

000009a2 <SRVM_voidOff>:
}


void SRVM_voidOff(void)
{
	PWM_voidOFFChannel_1A();
     9a2:	0e 94 a2 04 	call	0x944	; 0x944 <PWM_voidOFFChannel_1A>
     9a6:	08 95       	ret

000009a8 <__vector_11>:
     9a8:	1f 92       	push	r1
     9aa:	0f 92       	push	r0
     9ac:	0f b6       	in	r0, 0x3f	; 63
     9ae:	0f 92       	push	r0
     9b0:	11 24       	eor	r1, r1
     9b2:	2f 93       	push	r18
     9b4:	3f 93       	push	r19
     9b6:	4f 93       	push	r20
     9b8:	5f 93       	push	r21
     9ba:	6f 93       	push	r22
     9bc:	7f 93       	push	r23
     9be:	8f 93       	push	r24
     9c0:	9f 93       	push	r25
     9c2:	af 93       	push	r26
     9c4:	bf 93       	push	r27
     9c6:	ef 93       	push	r30
     9c8:	ff 93       	push	r31
     9ca:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <local_u16OVFCounter.1615>
     9ce:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <local_u16OVFCounter.1615+0x1>
     9d2:	01 96       	adiw	r24, 0x01	; 1
     9d4:	90 93 7d 00 	sts	0x007D, r25	; 0x80007d <local_u16OVFCounter.1615+0x1>
     9d8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <local_u16OVFCounter.1615>
     9dc:	81 3d       	cpi	r24, 0xD1	; 209
     9de:	93 40       	sbci	r25, 0x03	; 3
     9e0:	69 f4       	brne	.+26     	; 0x9fc <__vector_11+0x54>
     9e2:	81 e7       	ldi	r24, 0x71	; 113
     9e4:	82 bf       	out	0x32, r24	; 50
     9e6:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <local_u16OVFCounter.1615+0x1>
     9ea:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <local_u16OVFCounter.1615>
     9ee:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <PRV_pFunCallBackOVF>
     9f2:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <PRV_pFunCallBackOVF+0x1>
     9f6:	30 97       	sbiw	r30, 0x00	; 0
     9f8:	09 f0       	breq	.+2      	; 0x9fc <__vector_11+0x54>
     9fa:	09 95       	icall
     9fc:	ff 91       	pop	r31
     9fe:	ef 91       	pop	r30
     a00:	bf 91       	pop	r27
     a02:	af 91       	pop	r26
     a04:	9f 91       	pop	r25
     a06:	8f 91       	pop	r24
     a08:	7f 91       	pop	r23
     a0a:	6f 91       	pop	r22
     a0c:	5f 91       	pop	r21
     a0e:	4f 91       	pop	r20
     a10:	3f 91       	pop	r19
     a12:	2f 91       	pop	r18
     a14:	0f 90       	pop	r0
     a16:	0f be       	out	0x3f, r0	; 63
     a18:	0f 90       	pop	r0
     a1a:	1f 90       	pop	r1
     a1c:	18 95       	reti

00000a1e <__vector_10>:
     a1e:	1f 92       	push	r1
     a20:	0f 92       	push	r0
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	0f 92       	push	r0
     a26:	11 24       	eor	r1, r1
     a28:	2f 93       	push	r18
     a2a:	3f 93       	push	r19
     a2c:	4f 93       	push	r20
     a2e:	5f 93       	push	r21
     a30:	6f 93       	push	r22
     a32:	7f 93       	push	r23
     a34:	8f 93       	push	r24
     a36:	9f 93       	push	r25
     a38:	af 93       	push	r26
     a3a:	bf 93       	push	r27
     a3c:	ef 93       	push	r30
     a3e:	ff 93       	push	r31
     a40:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__data_end>
     a44:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <__data_end+0x1>
     a48:	01 96       	adiw	r24, 0x01	; 1
     a4a:	90 93 7b 00 	sts	0x007B, r25	; 0x80007b <__data_end+0x1>
     a4e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__data_end>
     a52:	88 3e       	cpi	r24, 0xE8	; 232
     a54:	93 40       	sbci	r25, 0x03	; 3
     a56:	59 f4       	brne	.+22     	; 0xa6e <__vector_10+0x50>
     a58:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__data_end+0x1>
     a5c:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__data_end>
     a60:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <PRV_pFunCallBackCTC>
     a64:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <PRV_pFunCallBackCTC+0x1>
     a68:	30 97       	sbiw	r30, 0x00	; 0
     a6a:	09 f0       	breq	.+2      	; 0xa6e <__vector_10+0x50>
     a6c:	09 95       	icall
     a6e:	ff 91       	pop	r31
     a70:	ef 91       	pop	r30
     a72:	bf 91       	pop	r27
     a74:	af 91       	pop	r26
     a76:	9f 91       	pop	r25
     a78:	8f 91       	pop	r24
     a7a:	7f 91       	pop	r23
     a7c:	6f 91       	pop	r22
     a7e:	5f 91       	pop	r21
     a80:	4f 91       	pop	r20
     a82:	3f 91       	pop	r19
     a84:	2f 91       	pop	r18
     a86:	0f 90       	pop	r0
     a88:	0f be       	out	0x3f, r0	; 63
     a8a:	0f 90       	pop	r0
     a8c:	1f 90       	pop	r1
     a8e:	18 95       	reti

00000a90 <__vector_9>:
     a90:	1f 92       	push	r1
     a92:	0f 92       	push	r0
     a94:	0f b6       	in	r0, 0x3f	; 63
     a96:	0f 92       	push	r0
     a98:	11 24       	eor	r1, r1
     a9a:	2f 93       	push	r18
     a9c:	3f 93       	push	r19
     a9e:	4f 93       	push	r20
     aa0:	5f 93       	push	r21
     aa2:	6f 93       	push	r22
     aa4:	7f 93       	push	r23
     aa6:	8f 93       	push	r24
     aa8:	9f 93       	push	r25
     aaa:	af 93       	push	r26
     aac:	bf 93       	push	r27
     aae:	ef 93       	push	r30
     ab0:	ff 93       	push	r31
     ab2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <local_u8OVFCounter.1615>
     ab6:	8f 5f       	subi	r24, 0xFF	; 255
     ab8:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <local_u8OVFCounter.1615>
     abc:	84 30       	cpi	r24, 0x04	; 4
     abe:	69 f4       	brne	.+26     	; 0xada <__vector_9+0x4a>
     ac0:	80 e7       	ldi	r24, 0x70	; 112
     ac2:	9f e2       	ldi	r25, 0x2F	; 47
     ac4:	9d bd       	out	0x2d, r25	; 45
     ac6:	8c bd       	out	0x2c, r24	; 44
     ac8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <local_u8OVFCounter.1615>
     acc:	e0 91 87 00 	lds	r30, 0x0087	; 0x800087 <PRV_pFunCallBackOVF>
     ad0:	f0 91 88 00 	lds	r31, 0x0088	; 0x800088 <PRV_pFunCallBackOVF+0x1>
     ad4:	30 97       	sbiw	r30, 0x00	; 0
     ad6:	09 f0       	breq	.+2      	; 0xada <__vector_9+0x4a>
     ad8:	09 95       	icall
     ada:	ff 91       	pop	r31
     adc:	ef 91       	pop	r30
     ade:	bf 91       	pop	r27
     ae0:	af 91       	pop	r26
     ae2:	9f 91       	pop	r25
     ae4:	8f 91       	pop	r24
     ae6:	7f 91       	pop	r23
     ae8:	6f 91       	pop	r22
     aea:	5f 91       	pop	r21
     aec:	4f 91       	pop	r20
     aee:	3f 91       	pop	r19
     af0:	2f 91       	pop	r18
     af2:	0f 90       	pop	r0
     af4:	0f be       	out	0x3f, r0	; 63
     af6:	0f 90       	pop	r0
     af8:	1f 90       	pop	r1
     afa:	18 95       	reti

00000afc <__vector_7>:
     afc:	1f 92       	push	r1
     afe:	0f 92       	push	r0
     b00:	0f b6       	in	r0, 0x3f	; 63
     b02:	0f 92       	push	r0
     b04:	11 24       	eor	r1, r1
     b06:	2f 93       	push	r18
     b08:	3f 93       	push	r19
     b0a:	4f 93       	push	r20
     b0c:	5f 93       	push	r21
     b0e:	6f 93       	push	r22
     b10:	7f 93       	push	r23
     b12:	8f 93       	push	r24
     b14:	9f 93       	push	r25
     b16:	af 93       	push	r26
     b18:	bf 93       	push	r27
     b1a:	ef 93       	push	r30
     b1c:	ff 93       	push	r31
     b1e:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <local_u16CTCCounter.1621>
     b22:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <local_u16CTCCounter.1621+0x1>
     b26:	01 96       	adiw	r24, 0x01	; 1
     b28:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <local_u16CTCCounter.1621+0x1>
     b2c:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <local_u16CTCCounter.1621>
     b30:	04 97       	sbiw	r24, 0x04	; 4
     b32:	59 f4       	brne	.+22     	; 0xb4a <__vector_7+0x4e>
     b34:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <local_u16CTCCounter.1621+0x1>
     b38:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <local_u16CTCCounter.1621>
     b3c:	e0 91 85 00 	lds	r30, 0x0085	; 0x800085 <PRV_pFunCallBackCTCA>
     b40:	f0 91 86 00 	lds	r31, 0x0086	; 0x800086 <PRV_pFunCallBackCTCA+0x1>
     b44:	30 97       	sbiw	r30, 0x00	; 0
     b46:	09 f0       	breq	.+2      	; 0xb4a <__vector_7+0x4e>
     b48:	09 95       	icall
     b4a:	ff 91       	pop	r31
     b4c:	ef 91       	pop	r30
     b4e:	bf 91       	pop	r27
     b50:	af 91       	pop	r26
     b52:	9f 91       	pop	r25
     b54:	8f 91       	pop	r24
     b56:	7f 91       	pop	r23
     b58:	6f 91       	pop	r22
     b5a:	5f 91       	pop	r21
     b5c:	4f 91       	pop	r20
     b5e:	3f 91       	pop	r19
     b60:	2f 91       	pop	r18
     b62:	0f 90       	pop	r0
     b64:	0f be       	out	0x3f, r0	; 63
     b66:	0f 90       	pop	r0
     b68:	1f 90       	pop	r1
     b6a:	18 95       	reti

00000b6c <__vector_5>:
     b6c:	1f 92       	push	r1
     b6e:	0f 92       	push	r0
     b70:	0f b6       	in	r0, 0x3f	; 63
     b72:	0f 92       	push	r0
     b74:	11 24       	eor	r1, r1
     b76:	2f 93       	push	r18
     b78:	3f 93       	push	r19
     b7a:	4f 93       	push	r20
     b7c:	5f 93       	push	r21
     b7e:	6f 93       	push	r22
     b80:	7f 93       	push	r23
     b82:	8f 93       	push	r24
     b84:	9f 93       	push	r25
     b86:	af 93       	push	r26
     b88:	bf 93       	push	r27
     b8a:	ef 93       	push	r30
     b8c:	ff 93       	push	r31
     b8e:	80 91 8b 00 	lds	r24, 0x008B	; 0x80008b <local_u16OVFCounter.1615>
     b92:	90 91 8c 00 	lds	r25, 0x008C	; 0x80008c <local_u16OVFCounter.1615+0x1>
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	90 93 8c 00 	sts	0x008C, r25	; 0x80008c <local_u16OVFCounter.1615+0x1>
     b9c:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <local_u16OVFCounter.1615>
     ba0:	81 3d       	cpi	r24, 0xD1	; 209
     ba2:	93 40       	sbci	r25, 0x03	; 3
     ba4:	69 f4       	brne	.+26     	; 0xbc0 <__vector_5+0x54>
     ba6:	81 e7       	ldi	r24, 0x71	; 113
     ba8:	84 bd       	out	0x24, r24	; 36
     baa:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <local_u16OVFCounter.1615+0x1>
     bae:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <local_u16OVFCounter.1615>
     bb2:	e0 91 8f 00 	lds	r30, 0x008F	; 0x80008f <PRV_pFunCallBackOVF>
     bb6:	f0 91 90 00 	lds	r31, 0x0090	; 0x800090 <PRV_pFunCallBackOVF+0x1>
     bba:	30 97       	sbiw	r30, 0x00	; 0
     bbc:	09 f0       	breq	.+2      	; 0xbc0 <__vector_5+0x54>
     bbe:	09 95       	icall
     bc0:	ff 91       	pop	r31
     bc2:	ef 91       	pop	r30
     bc4:	bf 91       	pop	r27
     bc6:	af 91       	pop	r26
     bc8:	9f 91       	pop	r25
     bca:	8f 91       	pop	r24
     bcc:	7f 91       	pop	r23
     bce:	6f 91       	pop	r22
     bd0:	5f 91       	pop	r21
     bd2:	4f 91       	pop	r20
     bd4:	3f 91       	pop	r19
     bd6:	2f 91       	pop	r18
     bd8:	0f 90       	pop	r0
     bda:	0f be       	out	0x3f, r0	; 63
     bdc:	0f 90       	pop	r0
     bde:	1f 90       	pop	r1
     be0:	18 95       	reti

00000be2 <__vector_4>:
     be2:	1f 92       	push	r1
     be4:	0f 92       	push	r0
     be6:	0f b6       	in	r0, 0x3f	; 63
     be8:	0f 92       	push	r0
     bea:	11 24       	eor	r1, r1
     bec:	2f 93       	push	r18
     bee:	3f 93       	push	r19
     bf0:	4f 93       	push	r20
     bf2:	5f 93       	push	r21
     bf4:	6f 93       	push	r22
     bf6:	7f 93       	push	r23
     bf8:	8f 93       	push	r24
     bfa:	9f 93       	push	r25
     bfc:	af 93       	push	r26
     bfe:	bf 93       	push	r27
     c00:	ef 93       	push	r30
     c02:	ff 93       	push	r31
     c04:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <local_u16CTCCounter.1621>
     c08:	90 91 8a 00 	lds	r25, 0x008A	; 0x80008a <local_u16CTCCounter.1621+0x1>
     c0c:	01 96       	adiw	r24, 0x01	; 1
     c0e:	90 93 8a 00 	sts	0x008A, r25	; 0x80008a <local_u16CTCCounter.1621+0x1>
     c12:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <local_u16CTCCounter.1621>
     c16:	88 3e       	cpi	r24, 0xE8	; 232
     c18:	93 40       	sbci	r25, 0x03	; 3
     c1a:	59 f4       	brne	.+22     	; 0xc32 <__vector_4+0x50>
     c1c:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <local_u16CTCCounter.1621+0x1>
     c20:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <local_u16CTCCounter.1621>
     c24:	e0 91 8d 00 	lds	r30, 0x008D	; 0x80008d <PRV_pFunCallBackCTC>
     c28:	f0 91 8e 00 	lds	r31, 0x008E	; 0x80008e <PRV_pFunCallBackCTC+0x1>
     c2c:	30 97       	sbiw	r30, 0x00	; 0
     c2e:	09 f0       	breq	.+2      	; 0xc32 <__vector_4+0x50>
     c30:	09 95       	icall
     c32:	ff 91       	pop	r31
     c34:	ef 91       	pop	r30
     c36:	bf 91       	pop	r27
     c38:	af 91       	pop	r26
     c3a:	9f 91       	pop	r25
     c3c:	8f 91       	pop	r24
     c3e:	7f 91       	pop	r23
     c40:	6f 91       	pop	r22
     c42:	5f 91       	pop	r21
     c44:	4f 91       	pop	r20
     c46:	3f 91       	pop	r19
     c48:	2f 91       	pop	r18
     c4a:	0f 90       	pop	r0
     c4c:	0f be       	out	0x3f, r0	; 63
     c4e:	0f 90       	pop	r0
     c50:	1f 90       	pop	r1
     c52:	18 95       	reti

00000c54 <__subsf3>:
     c54:	50 58       	subi	r21, 0x80	; 128

00000c56 <__addsf3>:
     c56:	bb 27       	eor	r27, r27
     c58:	aa 27       	eor	r26, r26
     c5a:	0e 94 42 06 	call	0xc84	; 0xc84 <__addsf3x>
     c5e:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__fp_round>
     c62:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__fp_pscA>
     c66:	38 f0       	brcs	.+14     	; 0xc76 <__addsf3+0x20>
     c68:	0e 94 ae 07 	call	0xf5c	; 0xf5c <__fp_pscB>
     c6c:	20 f0       	brcs	.+8      	; 0xc76 <__addsf3+0x20>
     c6e:	39 f4       	brne	.+14     	; 0xc7e <__addsf3+0x28>
     c70:	9f 3f       	cpi	r25, 0xFF	; 255
     c72:	19 f4       	brne	.+6      	; 0xc7a <__addsf3+0x24>
     c74:	26 f4       	brtc	.+8      	; 0xc7e <__addsf3+0x28>
     c76:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_nan>
     c7a:	0e f4       	brtc	.+2      	; 0xc7e <__addsf3+0x28>
     c7c:	e0 95       	com	r30
     c7e:	e7 fb       	bst	r30, 7
     c80:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_inf>

00000c84 <__addsf3x>:
     c84:	e9 2f       	mov	r30, r25
     c86:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__fp_split3>
     c8a:	58 f3       	brcs	.-42     	; 0xc62 <__addsf3+0xc>
     c8c:	ba 17       	cp	r27, r26
     c8e:	62 07       	cpc	r22, r18
     c90:	73 07       	cpc	r23, r19
     c92:	84 07       	cpc	r24, r20
     c94:	95 07       	cpc	r25, r21
     c96:	20 f0       	brcs	.+8      	; 0xca0 <__addsf3x+0x1c>
     c98:	79 f4       	brne	.+30     	; 0xcb8 <__addsf3x+0x34>
     c9a:	a6 f5       	brtc	.+104    	; 0xd04 <__addsf3x+0x80>
     c9c:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__fp_zero>
     ca0:	0e f4       	brtc	.+2      	; 0xca4 <__addsf3x+0x20>
     ca2:	e0 95       	com	r30
     ca4:	0b 2e       	mov	r0, r27
     ca6:	ba 2f       	mov	r27, r26
     ca8:	a0 2d       	mov	r26, r0
     caa:	0b 01       	movw	r0, r22
     cac:	b9 01       	movw	r22, r18
     cae:	90 01       	movw	r18, r0
     cb0:	0c 01       	movw	r0, r24
     cb2:	ca 01       	movw	r24, r20
     cb4:	a0 01       	movw	r20, r0
     cb6:	11 24       	eor	r1, r1
     cb8:	ff 27       	eor	r31, r31
     cba:	59 1b       	sub	r21, r25
     cbc:	99 f0       	breq	.+38     	; 0xce4 <__addsf3x+0x60>
     cbe:	59 3f       	cpi	r21, 0xF9	; 249
     cc0:	50 f4       	brcc	.+20     	; 0xcd6 <__addsf3x+0x52>
     cc2:	50 3e       	cpi	r21, 0xE0	; 224
     cc4:	68 f1       	brcs	.+90     	; 0xd20 <__addsf3x+0x9c>
     cc6:	1a 16       	cp	r1, r26
     cc8:	f0 40       	sbci	r31, 0x00	; 0
     cca:	a2 2f       	mov	r26, r18
     ccc:	23 2f       	mov	r18, r19
     cce:	34 2f       	mov	r19, r20
     cd0:	44 27       	eor	r20, r20
     cd2:	58 5f       	subi	r21, 0xF8	; 248
     cd4:	f3 cf       	rjmp	.-26     	; 0xcbc <__addsf3x+0x38>
     cd6:	46 95       	lsr	r20
     cd8:	37 95       	ror	r19
     cda:	27 95       	ror	r18
     cdc:	a7 95       	ror	r26
     cde:	f0 40       	sbci	r31, 0x00	; 0
     ce0:	53 95       	inc	r21
     ce2:	c9 f7       	brne	.-14     	; 0xcd6 <__addsf3x+0x52>
     ce4:	7e f4       	brtc	.+30     	; 0xd04 <__addsf3x+0x80>
     ce6:	1f 16       	cp	r1, r31
     ce8:	ba 0b       	sbc	r27, r26
     cea:	62 0b       	sbc	r22, r18
     cec:	73 0b       	sbc	r23, r19
     cee:	84 0b       	sbc	r24, r20
     cf0:	ba f0       	brmi	.+46     	; 0xd20 <__addsf3x+0x9c>
     cf2:	91 50       	subi	r25, 0x01	; 1
     cf4:	a1 f0       	breq	.+40     	; 0xd1e <__addsf3x+0x9a>
     cf6:	ff 0f       	add	r31, r31
     cf8:	bb 1f       	adc	r27, r27
     cfa:	66 1f       	adc	r22, r22
     cfc:	77 1f       	adc	r23, r23
     cfe:	88 1f       	adc	r24, r24
     d00:	c2 f7       	brpl	.-16     	; 0xcf2 <__addsf3x+0x6e>
     d02:	0e c0       	rjmp	.+28     	; 0xd20 <__addsf3x+0x9c>
     d04:	ba 0f       	add	r27, r26
     d06:	62 1f       	adc	r22, r18
     d08:	73 1f       	adc	r23, r19
     d0a:	84 1f       	adc	r24, r20
     d0c:	48 f4       	brcc	.+18     	; 0xd20 <__addsf3x+0x9c>
     d0e:	87 95       	ror	r24
     d10:	77 95       	ror	r23
     d12:	67 95       	ror	r22
     d14:	b7 95       	ror	r27
     d16:	f7 95       	ror	r31
     d18:	9e 3f       	cpi	r25, 0xFE	; 254
     d1a:	08 f0       	brcs	.+2      	; 0xd1e <__addsf3x+0x9a>
     d1c:	b0 cf       	rjmp	.-160    	; 0xc7e <__addsf3+0x28>
     d1e:	93 95       	inc	r25
     d20:	88 0f       	add	r24, r24
     d22:	08 f0       	brcs	.+2      	; 0xd26 <__addsf3x+0xa2>
     d24:	99 27       	eor	r25, r25
     d26:	ee 0f       	add	r30, r30
     d28:	97 95       	ror	r25
     d2a:	87 95       	ror	r24
     d2c:	08 95       	ret

00000d2e <__cmpsf2>:
     d2e:	0e 94 7a 07 	call	0xef4	; 0xef4 <__fp_cmp>
     d32:	08 f4       	brcc	.+2      	; 0xd36 <__cmpsf2+0x8>
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	08 95       	ret

00000d38 <__divsf3>:
     d38:	0e 94 b0 06 	call	0xd60	; 0xd60 <__divsf3x>
     d3c:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__fp_round>
     d40:	0e 94 ae 07 	call	0xf5c	; 0xf5c <__fp_pscB>
     d44:	58 f0       	brcs	.+22     	; 0xd5c <__divsf3+0x24>
     d46:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__fp_pscA>
     d4a:	40 f0       	brcs	.+16     	; 0xd5c <__divsf3+0x24>
     d4c:	29 f4       	brne	.+10     	; 0xd58 <__divsf3+0x20>
     d4e:	5f 3f       	cpi	r21, 0xFF	; 255
     d50:	29 f0       	breq	.+10     	; 0xd5c <__divsf3+0x24>
     d52:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_inf>
     d56:	51 11       	cpse	r21, r1
     d58:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__fp_szero>
     d5c:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_nan>

00000d60 <__divsf3x>:
     d60:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__fp_split3>
     d64:	68 f3       	brcs	.-38     	; 0xd40 <__divsf3+0x8>

00000d66 <__divsf3_pse>:
     d66:	99 23       	and	r25, r25
     d68:	b1 f3       	breq	.-20     	; 0xd56 <__divsf3+0x1e>
     d6a:	55 23       	and	r21, r21
     d6c:	91 f3       	breq	.-28     	; 0xd52 <__divsf3+0x1a>
     d6e:	95 1b       	sub	r25, r21
     d70:	55 0b       	sbc	r21, r21
     d72:	bb 27       	eor	r27, r27
     d74:	aa 27       	eor	r26, r26
     d76:	62 17       	cp	r22, r18
     d78:	73 07       	cpc	r23, r19
     d7a:	84 07       	cpc	r24, r20
     d7c:	38 f0       	brcs	.+14     	; 0xd8c <__divsf3_pse+0x26>
     d7e:	9f 5f       	subi	r25, 0xFF	; 255
     d80:	5f 4f       	sbci	r21, 0xFF	; 255
     d82:	22 0f       	add	r18, r18
     d84:	33 1f       	adc	r19, r19
     d86:	44 1f       	adc	r20, r20
     d88:	aa 1f       	adc	r26, r26
     d8a:	a9 f3       	breq	.-22     	; 0xd76 <__divsf3_pse+0x10>
     d8c:	35 d0       	rcall	.+106    	; 0xdf8 <__divsf3_pse+0x92>
     d8e:	0e 2e       	mov	r0, r30
     d90:	3a f0       	brmi	.+14     	; 0xda0 <__divsf3_pse+0x3a>
     d92:	e0 e8       	ldi	r30, 0x80	; 128
     d94:	32 d0       	rcall	.+100    	; 0xdfa <__divsf3_pse+0x94>
     d96:	91 50       	subi	r25, 0x01	; 1
     d98:	50 40       	sbci	r21, 0x00	; 0
     d9a:	e6 95       	lsr	r30
     d9c:	00 1c       	adc	r0, r0
     d9e:	ca f7       	brpl	.-14     	; 0xd92 <__divsf3_pse+0x2c>
     da0:	2b d0       	rcall	.+86     	; 0xdf8 <__divsf3_pse+0x92>
     da2:	fe 2f       	mov	r31, r30
     da4:	29 d0       	rcall	.+82     	; 0xdf8 <__divsf3_pse+0x92>
     da6:	66 0f       	add	r22, r22
     da8:	77 1f       	adc	r23, r23
     daa:	88 1f       	adc	r24, r24
     dac:	bb 1f       	adc	r27, r27
     dae:	26 17       	cp	r18, r22
     db0:	37 07       	cpc	r19, r23
     db2:	48 07       	cpc	r20, r24
     db4:	ab 07       	cpc	r26, r27
     db6:	b0 e8       	ldi	r27, 0x80	; 128
     db8:	09 f0       	breq	.+2      	; 0xdbc <__divsf3_pse+0x56>
     dba:	bb 0b       	sbc	r27, r27
     dbc:	80 2d       	mov	r24, r0
     dbe:	bf 01       	movw	r22, r30
     dc0:	ff 27       	eor	r31, r31
     dc2:	93 58       	subi	r25, 0x83	; 131
     dc4:	5f 4f       	sbci	r21, 0xFF	; 255
     dc6:	3a f0       	brmi	.+14     	; 0xdd6 <__divsf3_pse+0x70>
     dc8:	9e 3f       	cpi	r25, 0xFE	; 254
     dca:	51 05       	cpc	r21, r1
     dcc:	78 f0       	brcs	.+30     	; 0xdec <__divsf3_pse+0x86>
     dce:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_inf>
     dd2:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__fp_szero>
     dd6:	5f 3f       	cpi	r21, 0xFF	; 255
     dd8:	e4 f3       	brlt	.-8      	; 0xdd2 <__divsf3_pse+0x6c>
     dda:	98 3e       	cpi	r25, 0xE8	; 232
     ddc:	d4 f3       	brlt	.-12     	; 0xdd2 <__divsf3_pse+0x6c>
     dde:	86 95       	lsr	r24
     de0:	77 95       	ror	r23
     de2:	67 95       	ror	r22
     de4:	b7 95       	ror	r27
     de6:	f7 95       	ror	r31
     de8:	9f 5f       	subi	r25, 0xFF	; 255
     dea:	c9 f7       	brne	.-14     	; 0xdde <__divsf3_pse+0x78>
     dec:	88 0f       	add	r24, r24
     dee:	91 1d       	adc	r25, r1
     df0:	96 95       	lsr	r25
     df2:	87 95       	ror	r24
     df4:	97 f9       	bld	r25, 7
     df6:	08 95       	ret
     df8:	e1 e0       	ldi	r30, 0x01	; 1
     dfa:	66 0f       	add	r22, r22
     dfc:	77 1f       	adc	r23, r23
     dfe:	88 1f       	adc	r24, r24
     e00:	bb 1f       	adc	r27, r27
     e02:	62 17       	cp	r22, r18
     e04:	73 07       	cpc	r23, r19
     e06:	84 07       	cpc	r24, r20
     e08:	ba 07       	cpc	r27, r26
     e0a:	20 f0       	brcs	.+8      	; 0xe14 <__divsf3_pse+0xae>
     e0c:	62 1b       	sub	r22, r18
     e0e:	73 0b       	sbc	r23, r19
     e10:	84 0b       	sbc	r24, r20
     e12:	ba 0b       	sbc	r27, r26
     e14:	ee 1f       	adc	r30, r30
     e16:	88 f7       	brcc	.-30     	; 0xdfa <__divsf3_pse+0x94>
     e18:	e0 95       	com	r30
     e1a:	08 95       	ret

00000e1c <__fixunssfsi>:
     e1c:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__fp_splitA>
     e20:	88 f0       	brcs	.+34     	; 0xe44 <__fixunssfsi+0x28>
     e22:	9f 57       	subi	r25, 0x7F	; 127
     e24:	98 f0       	brcs	.+38     	; 0xe4c <__fixunssfsi+0x30>
     e26:	b9 2f       	mov	r27, r25
     e28:	99 27       	eor	r25, r25
     e2a:	b7 51       	subi	r27, 0x17	; 23
     e2c:	b0 f0       	brcs	.+44     	; 0xe5a <__fixunssfsi+0x3e>
     e2e:	e1 f0       	breq	.+56     	; 0xe68 <__fixunssfsi+0x4c>
     e30:	66 0f       	add	r22, r22
     e32:	77 1f       	adc	r23, r23
     e34:	88 1f       	adc	r24, r24
     e36:	99 1f       	adc	r25, r25
     e38:	1a f0       	brmi	.+6      	; 0xe40 <__fixunssfsi+0x24>
     e3a:	ba 95       	dec	r27
     e3c:	c9 f7       	brne	.-14     	; 0xe30 <__fixunssfsi+0x14>
     e3e:	14 c0       	rjmp	.+40     	; 0xe68 <__fixunssfsi+0x4c>
     e40:	b1 30       	cpi	r27, 0x01	; 1
     e42:	91 f0       	breq	.+36     	; 0xe68 <__fixunssfsi+0x4c>
     e44:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <__fp_zero>
     e48:	b1 e0       	ldi	r27, 0x01	; 1
     e4a:	08 95       	ret
     e4c:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__fp_zero>
     e50:	67 2f       	mov	r22, r23
     e52:	78 2f       	mov	r23, r24
     e54:	88 27       	eor	r24, r24
     e56:	b8 5f       	subi	r27, 0xF8	; 248
     e58:	39 f0       	breq	.+14     	; 0xe68 <__fixunssfsi+0x4c>
     e5a:	b9 3f       	cpi	r27, 0xF9	; 249
     e5c:	cc f3       	brlt	.-14     	; 0xe50 <__fixunssfsi+0x34>
     e5e:	86 95       	lsr	r24
     e60:	77 95       	ror	r23
     e62:	67 95       	ror	r22
     e64:	b3 95       	inc	r27
     e66:	d9 f7       	brne	.-10     	; 0xe5e <__fixunssfsi+0x42>
     e68:	3e f4       	brtc	.+14     	; 0xe78 <__fixunssfsi+0x5c>
     e6a:	90 95       	com	r25
     e6c:	80 95       	com	r24
     e6e:	70 95       	com	r23
     e70:	61 95       	neg	r22
     e72:	7f 4f       	sbci	r23, 0xFF	; 255
     e74:	8f 4f       	sbci	r24, 0xFF	; 255
     e76:	9f 4f       	sbci	r25, 0xFF	; 255
     e78:	08 95       	ret

00000e7a <__floatunsisf>:
     e7a:	e8 94       	clt
     e7c:	09 c0       	rjmp	.+18     	; 0xe90 <__floatsisf+0x12>

00000e7e <__floatsisf>:
     e7e:	97 fb       	bst	r25, 7
     e80:	3e f4       	brtc	.+14     	; 0xe90 <__floatsisf+0x12>
     e82:	90 95       	com	r25
     e84:	80 95       	com	r24
     e86:	70 95       	com	r23
     e88:	61 95       	neg	r22
     e8a:	7f 4f       	sbci	r23, 0xFF	; 255
     e8c:	8f 4f       	sbci	r24, 0xFF	; 255
     e8e:	9f 4f       	sbci	r25, 0xFF	; 255
     e90:	99 23       	and	r25, r25
     e92:	a9 f0       	breq	.+42     	; 0xebe <__floatsisf+0x40>
     e94:	f9 2f       	mov	r31, r25
     e96:	96 e9       	ldi	r25, 0x96	; 150
     e98:	bb 27       	eor	r27, r27
     e9a:	93 95       	inc	r25
     e9c:	f6 95       	lsr	r31
     e9e:	87 95       	ror	r24
     ea0:	77 95       	ror	r23
     ea2:	67 95       	ror	r22
     ea4:	b7 95       	ror	r27
     ea6:	f1 11       	cpse	r31, r1
     ea8:	f8 cf       	rjmp	.-16     	; 0xe9a <__floatsisf+0x1c>
     eaa:	fa f4       	brpl	.+62     	; 0xeea <__floatsisf+0x6c>
     eac:	bb 0f       	add	r27, r27
     eae:	11 f4       	brne	.+4      	; 0xeb4 <__floatsisf+0x36>
     eb0:	60 ff       	sbrs	r22, 0
     eb2:	1b c0       	rjmp	.+54     	; 0xeea <__floatsisf+0x6c>
     eb4:	6f 5f       	subi	r22, 0xFF	; 255
     eb6:	7f 4f       	sbci	r23, 0xFF	; 255
     eb8:	8f 4f       	sbci	r24, 0xFF	; 255
     eba:	9f 4f       	sbci	r25, 0xFF	; 255
     ebc:	16 c0       	rjmp	.+44     	; 0xeea <__floatsisf+0x6c>
     ebe:	88 23       	and	r24, r24
     ec0:	11 f0       	breq	.+4      	; 0xec6 <__floatsisf+0x48>
     ec2:	96 e9       	ldi	r25, 0x96	; 150
     ec4:	11 c0       	rjmp	.+34     	; 0xee8 <__floatsisf+0x6a>
     ec6:	77 23       	and	r23, r23
     ec8:	21 f0       	breq	.+8      	; 0xed2 <__floatsisf+0x54>
     eca:	9e e8       	ldi	r25, 0x8E	; 142
     ecc:	87 2f       	mov	r24, r23
     ece:	76 2f       	mov	r23, r22
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <__floatsisf+0x5e>
     ed2:	66 23       	and	r22, r22
     ed4:	71 f0       	breq	.+28     	; 0xef2 <__floatsisf+0x74>
     ed6:	96 e8       	ldi	r25, 0x86	; 134
     ed8:	86 2f       	mov	r24, r22
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	60 e0       	ldi	r22, 0x00	; 0
     ede:	2a f0       	brmi	.+10     	; 0xeea <__floatsisf+0x6c>
     ee0:	9a 95       	dec	r25
     ee2:	66 0f       	add	r22, r22
     ee4:	77 1f       	adc	r23, r23
     ee6:	88 1f       	adc	r24, r24
     ee8:	da f7       	brpl	.-10     	; 0xee0 <__floatsisf+0x62>
     eea:	88 0f       	add	r24, r24
     eec:	96 95       	lsr	r25
     eee:	87 95       	ror	r24
     ef0:	97 f9       	bld	r25, 7
     ef2:	08 95       	ret

00000ef4 <__fp_cmp>:
     ef4:	99 0f       	add	r25, r25
     ef6:	00 08       	sbc	r0, r0
     ef8:	55 0f       	add	r21, r21
     efa:	aa 0b       	sbc	r26, r26
     efc:	e0 e8       	ldi	r30, 0x80	; 128
     efe:	fe ef       	ldi	r31, 0xFE	; 254
     f00:	16 16       	cp	r1, r22
     f02:	17 06       	cpc	r1, r23
     f04:	e8 07       	cpc	r30, r24
     f06:	f9 07       	cpc	r31, r25
     f08:	c0 f0       	brcs	.+48     	; 0xf3a <__fp_cmp+0x46>
     f0a:	12 16       	cp	r1, r18
     f0c:	13 06       	cpc	r1, r19
     f0e:	e4 07       	cpc	r30, r20
     f10:	f5 07       	cpc	r31, r21
     f12:	98 f0       	brcs	.+38     	; 0xf3a <__fp_cmp+0x46>
     f14:	62 1b       	sub	r22, r18
     f16:	73 0b       	sbc	r23, r19
     f18:	84 0b       	sbc	r24, r20
     f1a:	95 0b       	sbc	r25, r21
     f1c:	39 f4       	brne	.+14     	; 0xf2c <__fp_cmp+0x38>
     f1e:	0a 26       	eor	r0, r26
     f20:	61 f0       	breq	.+24     	; 0xf3a <__fp_cmp+0x46>
     f22:	23 2b       	or	r18, r19
     f24:	24 2b       	or	r18, r20
     f26:	25 2b       	or	r18, r21
     f28:	21 f4       	brne	.+8      	; 0xf32 <__fp_cmp+0x3e>
     f2a:	08 95       	ret
     f2c:	0a 26       	eor	r0, r26
     f2e:	09 f4       	brne	.+2      	; 0xf32 <__fp_cmp+0x3e>
     f30:	a1 40       	sbci	r26, 0x01	; 1
     f32:	a6 95       	lsr	r26
     f34:	8f ef       	ldi	r24, 0xFF	; 255
     f36:	81 1d       	adc	r24, r1
     f38:	81 1d       	adc	r24, r1
     f3a:	08 95       	ret

00000f3c <__fp_inf>:
     f3c:	97 f9       	bld	r25, 7
     f3e:	9f 67       	ori	r25, 0x7F	; 127
     f40:	80 e8       	ldi	r24, 0x80	; 128
     f42:	70 e0       	ldi	r23, 0x00	; 0
     f44:	60 e0       	ldi	r22, 0x00	; 0
     f46:	08 95       	ret

00000f48 <__fp_nan>:
     f48:	9f ef       	ldi	r25, 0xFF	; 255
     f4a:	80 ec       	ldi	r24, 0xC0	; 192
     f4c:	08 95       	ret

00000f4e <__fp_pscA>:
     f4e:	00 24       	eor	r0, r0
     f50:	0a 94       	dec	r0
     f52:	16 16       	cp	r1, r22
     f54:	17 06       	cpc	r1, r23
     f56:	18 06       	cpc	r1, r24
     f58:	09 06       	cpc	r0, r25
     f5a:	08 95       	ret

00000f5c <__fp_pscB>:
     f5c:	00 24       	eor	r0, r0
     f5e:	0a 94       	dec	r0
     f60:	12 16       	cp	r1, r18
     f62:	13 06       	cpc	r1, r19
     f64:	14 06       	cpc	r1, r20
     f66:	05 06       	cpc	r0, r21
     f68:	08 95       	ret

00000f6a <__fp_round>:
     f6a:	09 2e       	mov	r0, r25
     f6c:	03 94       	inc	r0
     f6e:	00 0c       	add	r0, r0
     f70:	11 f4       	brne	.+4      	; 0xf76 <__fp_round+0xc>
     f72:	88 23       	and	r24, r24
     f74:	52 f0       	brmi	.+20     	; 0xf8a <__fp_round+0x20>
     f76:	bb 0f       	add	r27, r27
     f78:	40 f4       	brcc	.+16     	; 0xf8a <__fp_round+0x20>
     f7a:	bf 2b       	or	r27, r31
     f7c:	11 f4       	brne	.+4      	; 0xf82 <__fp_round+0x18>
     f7e:	60 ff       	sbrs	r22, 0
     f80:	04 c0       	rjmp	.+8      	; 0xf8a <__fp_round+0x20>
     f82:	6f 5f       	subi	r22, 0xFF	; 255
     f84:	7f 4f       	sbci	r23, 0xFF	; 255
     f86:	8f 4f       	sbci	r24, 0xFF	; 255
     f88:	9f 4f       	sbci	r25, 0xFF	; 255
     f8a:	08 95       	ret

00000f8c <__fp_split3>:
     f8c:	57 fd       	sbrc	r21, 7
     f8e:	90 58       	subi	r25, 0x80	; 128
     f90:	44 0f       	add	r20, r20
     f92:	55 1f       	adc	r21, r21
     f94:	59 f0       	breq	.+22     	; 0xfac <__fp_splitA+0x10>
     f96:	5f 3f       	cpi	r21, 0xFF	; 255
     f98:	71 f0       	breq	.+28     	; 0xfb6 <__fp_splitA+0x1a>
     f9a:	47 95       	ror	r20

00000f9c <__fp_splitA>:
     f9c:	88 0f       	add	r24, r24
     f9e:	97 fb       	bst	r25, 7
     fa0:	99 1f       	adc	r25, r25
     fa2:	61 f0       	breq	.+24     	; 0xfbc <__fp_splitA+0x20>
     fa4:	9f 3f       	cpi	r25, 0xFF	; 255
     fa6:	79 f0       	breq	.+30     	; 0xfc6 <__fp_splitA+0x2a>
     fa8:	87 95       	ror	r24
     faa:	08 95       	ret
     fac:	12 16       	cp	r1, r18
     fae:	13 06       	cpc	r1, r19
     fb0:	14 06       	cpc	r1, r20
     fb2:	55 1f       	adc	r21, r21
     fb4:	f2 cf       	rjmp	.-28     	; 0xf9a <__fp_split3+0xe>
     fb6:	46 95       	lsr	r20
     fb8:	f1 df       	rcall	.-30     	; 0xf9c <__fp_splitA>
     fba:	08 c0       	rjmp	.+16     	; 0xfcc <__fp_splitA+0x30>
     fbc:	16 16       	cp	r1, r22
     fbe:	17 06       	cpc	r1, r23
     fc0:	18 06       	cpc	r1, r24
     fc2:	99 1f       	adc	r25, r25
     fc4:	f1 cf       	rjmp	.-30     	; 0xfa8 <__fp_splitA+0xc>
     fc6:	86 95       	lsr	r24
     fc8:	71 05       	cpc	r23, r1
     fca:	61 05       	cpc	r22, r1
     fcc:	08 94       	sec
     fce:	08 95       	ret

00000fd0 <__fp_zero>:
     fd0:	e8 94       	clt

00000fd2 <__fp_szero>:
     fd2:	bb 27       	eor	r27, r27
     fd4:	66 27       	eor	r22, r22
     fd6:	77 27       	eor	r23, r23
     fd8:	cb 01       	movw	r24, r22
     fda:	97 f9       	bld	r25, 7
     fdc:	08 95       	ret

00000fde <__mulsf3>:
     fde:	0e 94 02 08 	call	0x1004	; 0x1004 <__mulsf3x>
     fe2:	0c 94 b5 07 	jmp	0xf6a	; 0xf6a <__fp_round>
     fe6:	0e 94 a7 07 	call	0xf4e	; 0xf4e <__fp_pscA>
     fea:	38 f0       	brcs	.+14     	; 0xffa <__mulsf3+0x1c>
     fec:	0e 94 ae 07 	call	0xf5c	; 0xf5c <__fp_pscB>
     ff0:	20 f0       	brcs	.+8      	; 0xffa <__mulsf3+0x1c>
     ff2:	95 23       	and	r25, r21
     ff4:	11 f0       	breq	.+4      	; 0xffa <__mulsf3+0x1c>
     ff6:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_inf>
     ffa:	0c 94 a4 07 	jmp	0xf48	; 0xf48 <__fp_nan>
     ffe:	11 24       	eor	r1, r1
    1000:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__fp_szero>

00001004 <__mulsf3x>:
    1004:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__fp_split3>
    1008:	70 f3       	brcs	.-36     	; 0xfe6 <__mulsf3+0x8>

0000100a <__mulsf3_pse>:
    100a:	95 9f       	mul	r25, r21
    100c:	c1 f3       	breq	.-16     	; 0xffe <__mulsf3+0x20>
    100e:	95 0f       	add	r25, r21
    1010:	50 e0       	ldi	r21, 0x00	; 0
    1012:	55 1f       	adc	r21, r21
    1014:	62 9f       	mul	r22, r18
    1016:	f0 01       	movw	r30, r0
    1018:	72 9f       	mul	r23, r18
    101a:	bb 27       	eor	r27, r27
    101c:	f0 0d       	add	r31, r0
    101e:	b1 1d       	adc	r27, r1
    1020:	63 9f       	mul	r22, r19
    1022:	aa 27       	eor	r26, r26
    1024:	f0 0d       	add	r31, r0
    1026:	b1 1d       	adc	r27, r1
    1028:	aa 1f       	adc	r26, r26
    102a:	64 9f       	mul	r22, r20
    102c:	66 27       	eor	r22, r22
    102e:	b0 0d       	add	r27, r0
    1030:	a1 1d       	adc	r26, r1
    1032:	66 1f       	adc	r22, r22
    1034:	82 9f       	mul	r24, r18
    1036:	22 27       	eor	r18, r18
    1038:	b0 0d       	add	r27, r0
    103a:	a1 1d       	adc	r26, r1
    103c:	62 1f       	adc	r22, r18
    103e:	73 9f       	mul	r23, r19
    1040:	b0 0d       	add	r27, r0
    1042:	a1 1d       	adc	r26, r1
    1044:	62 1f       	adc	r22, r18
    1046:	83 9f       	mul	r24, r19
    1048:	a0 0d       	add	r26, r0
    104a:	61 1d       	adc	r22, r1
    104c:	22 1f       	adc	r18, r18
    104e:	74 9f       	mul	r23, r20
    1050:	33 27       	eor	r19, r19
    1052:	a0 0d       	add	r26, r0
    1054:	61 1d       	adc	r22, r1
    1056:	23 1f       	adc	r18, r19
    1058:	84 9f       	mul	r24, r20
    105a:	60 0d       	add	r22, r0
    105c:	21 1d       	adc	r18, r1
    105e:	82 2f       	mov	r24, r18
    1060:	76 2f       	mov	r23, r22
    1062:	6a 2f       	mov	r22, r26
    1064:	11 24       	eor	r1, r1
    1066:	9f 57       	subi	r25, 0x7F	; 127
    1068:	50 40       	sbci	r21, 0x00	; 0
    106a:	9a f0       	brmi	.+38     	; 0x1092 <__mulsf3_pse+0x88>
    106c:	f1 f0       	breq	.+60     	; 0x10aa <__mulsf3_pse+0xa0>
    106e:	88 23       	and	r24, r24
    1070:	4a f0       	brmi	.+18     	; 0x1084 <__mulsf3_pse+0x7a>
    1072:	ee 0f       	add	r30, r30
    1074:	ff 1f       	adc	r31, r31
    1076:	bb 1f       	adc	r27, r27
    1078:	66 1f       	adc	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	88 1f       	adc	r24, r24
    107e:	91 50       	subi	r25, 0x01	; 1
    1080:	50 40       	sbci	r21, 0x00	; 0
    1082:	a9 f7       	brne	.-22     	; 0x106e <__mulsf3_pse+0x64>
    1084:	9e 3f       	cpi	r25, 0xFE	; 254
    1086:	51 05       	cpc	r21, r1
    1088:	80 f0       	brcs	.+32     	; 0x10aa <__mulsf3_pse+0xa0>
    108a:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_inf>
    108e:	0c 94 e9 07 	jmp	0xfd2	; 0xfd2 <__fp_szero>
    1092:	5f 3f       	cpi	r21, 0xFF	; 255
    1094:	e4 f3       	brlt	.-8      	; 0x108e <__mulsf3_pse+0x84>
    1096:	98 3e       	cpi	r25, 0xE8	; 232
    1098:	d4 f3       	brlt	.-12     	; 0x108e <__mulsf3_pse+0x84>
    109a:	86 95       	lsr	r24
    109c:	77 95       	ror	r23
    109e:	67 95       	ror	r22
    10a0:	b7 95       	ror	r27
    10a2:	f7 95       	ror	r31
    10a4:	e7 95       	ror	r30
    10a6:	9f 5f       	subi	r25, 0xFF	; 255
    10a8:	c1 f7       	brne	.-16     	; 0x109a <__mulsf3_pse+0x90>
    10aa:	fe 2b       	or	r31, r30
    10ac:	88 0f       	add	r24, r24
    10ae:	91 1d       	adc	r25, r1
    10b0:	96 95       	lsr	r25
    10b2:	87 95       	ror	r24
    10b4:	97 f9       	bld	r25, 7
    10b6:	08 95       	ret

000010b8 <__udivmodsi4>:
    10b8:	a1 e2       	ldi	r26, 0x21	; 33
    10ba:	1a 2e       	mov	r1, r26
    10bc:	aa 1b       	sub	r26, r26
    10be:	bb 1b       	sub	r27, r27
    10c0:	fd 01       	movw	r30, r26
    10c2:	0d c0       	rjmp	.+26     	; 0x10de <__udivmodsi4_ep>

000010c4 <__udivmodsi4_loop>:
    10c4:	aa 1f       	adc	r26, r26
    10c6:	bb 1f       	adc	r27, r27
    10c8:	ee 1f       	adc	r30, r30
    10ca:	ff 1f       	adc	r31, r31
    10cc:	a2 17       	cp	r26, r18
    10ce:	b3 07       	cpc	r27, r19
    10d0:	e4 07       	cpc	r30, r20
    10d2:	f5 07       	cpc	r31, r21
    10d4:	20 f0       	brcs	.+8      	; 0x10de <__udivmodsi4_ep>
    10d6:	a2 1b       	sub	r26, r18
    10d8:	b3 0b       	sbc	r27, r19
    10da:	e4 0b       	sbc	r30, r20
    10dc:	f5 0b       	sbc	r31, r21

000010de <__udivmodsi4_ep>:
    10de:	66 1f       	adc	r22, r22
    10e0:	77 1f       	adc	r23, r23
    10e2:	88 1f       	adc	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	1a 94       	dec	r1
    10e8:	69 f7       	brne	.-38     	; 0x10c4 <__udivmodsi4_loop>
    10ea:	60 95       	com	r22
    10ec:	70 95       	com	r23
    10ee:	80 95       	com	r24
    10f0:	90 95       	com	r25
    10f2:	9b 01       	movw	r18, r22
    10f4:	ac 01       	movw	r20, r24
    10f6:	bd 01       	movw	r22, r26
    10f8:	cf 01       	movw	r24, r30
    10fa:	08 95       	ret

000010fc <_exit>:
    10fc:	f8 94       	cli

000010fe <__stop_program>:
    10fe:	ff cf       	rjmp	.-2      	; 0x10fe <__stop_program>
